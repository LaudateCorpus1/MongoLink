(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    103750,       2753]
NotebookOptionsPosition[     95274,       2466]
NotebookOutlinePosition[     96025,       2494]
CellTagsIndexPosition[     95893,       2488]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MongoDB Link Examples", "Title",
 CellChangeTimes->{{3.662457973465026*^9, 3.662457976663933*^9}}],

Cell["\<\
Use latest 10.4/11.0 builds. Also, this assumes you\[CloseCurlyQuote]ve built \
MongoLink.\
\>", "Item"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletDirectoryAdd", "[", 
   RowBox[{"ParentDirectory", "@", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "GeneralUtilities`"}], "\n", 
 RowBox[{"<<", "MongoLink`"}]}], "Code"],

Cell[TextData[{
 "For sandbox purposes, use the ARG Mongo Test server (anyone has read/write \
access, but no guarantees that any data you upload will not be \
deleted/overwritten ",
 StyleBox["at any point",
  FontSlant->"Italic"],
 ")."
}], "Item"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "$URI", " ", "=", " ", 
   "\"\<mongodb://arg:ARGTest@arg-ml-0.wolfram-arg.9431.mongodbdns.com:27000/\
Test\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$client", " ", "=", " ", 
   RowBox[{"ClientConnect", "[", "$URI", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"$db", " ", "=", " ", 
  RowBox[{"DatabaseConnect", "[", 
   RowBox[{"$client", ",", " ", "\"\<Test\>\""}], "]"}]}]}], "Code"],

Cell[BoxData[
 RowBox[{"MongoDatabase", "[", "1", "]"}]], "Output"]
}, Open  ]],

Cell[BoxData["Quit"], "Input"],

Cell[CellGroupData[{

Cell["Tutorial:", "Subchapter",
 CellChangeTimes->{{3.6627301212516003`*^9, 3.662730122026401*^9}, {
   3.662730326028225*^9, 3.662730331794251*^9}, 3.662791848691955*^9}],

Cell[CellGroupData[{

Cell["Collection-level ops", "Subsection"],

Cell["List all available collections:", "Item"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datasets", "=", 
  RowBox[{"DatabaseCollectionNames", "@", "$db"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SebUniqueTestCollection\"\>", ",", "\<\"TestCollection\"\>"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Create new collection which we will use with this tutorial, and delete after \
(choose something unique):\
\>", "Item"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$UniqueName", "=", "\"\<SebUniqueTestCollection\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DatabaseCreateCollection", "[", 
  RowBox[{"$db", ",", "$UniqueName"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"$testCollection", "=", 
  RowBox[{"CollectionConnect", "[", 
   RowBox[{"$db", ",", "$UniqueName"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DatabaseCreateCollection", "::", "mongoError"}], "MessageName"], 
  RowBox[{":", " "}], "\<\"collection already exists\"\>"}]], "Message", \
"MSG"],

Cell[BoxData["$Failed"], "Output"],

Cell[BoxData[
 RowBox[{"MongoCollection", "[", "2", "]"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Inserting Documents", "Subsection"],

Cell["Consider two docs:", "Item"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Type\>\"", "\[Rule]", " ", "\"\<Image\>\""}], ",", 
       RowBox[{"\"\<Dimensions\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"288", ",", "299"}], "}"}]}], ",", " ", 
       RowBox[{"\"\<BoundingBoxes\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3.3", ",", "6.6", ",", "2.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"4.6", ",", "3.4", ",", "2.2", ",", "7."}], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"\"\<BoundingBoxLabels\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<Dog\>\"", ",", "\"\<Lion\>\""}], "}"}]}], ",", 
       RowBox[{"\"\<ModifiedDate\>\"", "\[Rule]", " ", 
        RowBox[{"DateObject", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Type\>\"", "\[Rule]", " ", "\"\<Image\>\""}], ",", 
       RowBox[{"\"\<Dimensions\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"234", ",", "334"}], "}"}]}], ",", " ", 
       RowBox[{"\"\<BoundingBoxes\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.3", ",", "6.7", ",", "6.6", ",", "2.3"}], "}"}], "}"}]}],
        ",", 
       RowBox[{"\"\<BoundingBoxLabels\>\"", "\[Rule]", " ", 
        RowBox[{"{", "\"\<Hyena\>\"", "}"}]}], ",", " ", 
       RowBox[{"\"\<ModifiedDate\>\"", "\[Rule]", " ", 
        RowBox[{"DateObject", "[", "]"}]}]}], "|>"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6628268700502243`*^9, 3.662827086042739*^9}, {
  3.662827264969755*^9, 3.6628273269699*^9}, {3.663840332437353*^9, 
  3.663840362492766*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{GridBox[{{
       StyleBox["\"Type\"", 
        GrayLevel[0.3]], 
       StyleBox["\"Dimensions\"", 
        GrayLevel[0.3]], 
       StyleBox["\"BoundingBoxes\"", 
        GrayLevel[0.3]], 
       StyleBox["\"BoundingBoxLabels\"", 
        GrayLevel[0.3]], 
       StyleBox["\"ModifiedDate\"", 
        GrayLevel[0.3]]}, {
       StyleBox["\"Image\"", FontColor -> GrayLevel[0.4]], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 288, ",", 299, "\[ThinSpace]", "}"}], 
        LineBreakWithin -> Automatic], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 
          RowBox[{"{", 
            StyleBox[
             SubscriptBox["\[CenterEllipsis]", "4"], 
             GrayLevel[0.5]], "}"}], ",", 
          RowBox[{"{", 
            StyleBox[
             SubscriptBox["\[CenterEllipsis]", "4"], 
             GrayLevel[0.5]], "}"}], "\[ThinSpace]", "}"}], LineBreakWithin -> 
        Automatic], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 
          StyleBox["\"Dog\"", FontColor -> GrayLevel[0.4]], ",", 
          StyleBox["\"Lion\"", FontColor -> GrayLevel[0.4]], "\[ThinSpace]", 
          "}"}], LineBreakWithin -> Automatic], 
       InterpretationBox[
        TagBox[
         TooltipBox[
          StyleBox[
          "\"1 Mar 2016 17:58:02\"", FontFamily -> "Arial", FontSize -> 11, 
           FontWeight -> Bold, FontColor -> RGBColor[{
              Rational[33, 74], 
              Rational[27, 74], 
              Rational[117, 370]}]], 
          StyleBox[
          "DateObject[{2016, 3, 1}, TimeObject[{17, 58, 2.361818}, TimeZone \
-> 2.], TimeZone -> 2.]", FontWeight -> Bold, ShowStringCharacters -> True]], 
         
         MouseAppearanceTag["Arrow"]], 
        DateObject[{2016, 3, 1}, 
         TimeObject[{17, 58, 2.361818}, TimeZone -> 2.], TimeZone -> 2.]]}, {
       StyleBox["\"Image\"", FontColor -> GrayLevel[0.4]], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 234, ",", 334, "\[ThinSpace]", "}"}], 
        LineBreakWithin -> Automatic], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 
          RowBox[{"{", 
            StyleBox[
             SubscriptBox["\[CenterEllipsis]", "4"], 
             GrayLevel[0.5]], "}"}], "\[ThinSpace]", "}"}], LineBreakWithin -> 
        Automatic], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 
          StyleBox["\"Hyena\"", FontColor -> GrayLevel[0.4]], "\[ThinSpace]", 
          "}"}], LineBreakWithin -> Automatic], 
       InterpretationBox[
        TagBox[
         TooltipBox[
          StyleBox[
          "\"1 Mar 2016 17:58:02\"", FontFamily -> "Arial", FontSize -> 11, 
           FontWeight -> Bold, FontColor -> RGBColor[{
              Rational[33, 74], 
              Rational[27, 74], 
              Rational[117, 370]}]], 
          StyleBox[
          "DateObject[{2016, 3, 1}, TimeObject[{17, 58, 2.361881}, TimeZone \
-> 2.], TimeZone -> 2.]", FontWeight -> Bold, ShowStringCharacters -> True]], 
         
         MouseAppearanceTag["Arrow"]], 
        DateObject[{2016, 3, 1}, 
         TimeObject[{17, 58, 2.361881}, TimeZone -> 2.], TimeZone -> 2.]]}, {
       ItemBox[
        RowBox[{
          TagBox[
           TooltipBox["4 levels", 
            InterpretationBox[
             TagBox[
              TagBox[
               StyleBox[
                TagBox[
                 TooltipBox[
                  SubscriptBox[
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    "Type", FontColor -> RGBColor[0.6, 0.4, 0.2], FontFamily -> 
                    "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Str", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[String]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[String]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[String], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "Dimensions", FontColor -> RGBColor[0.6, 0.4, 0.2], 
                    FontFamily -> "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Int", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Integer]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Integer]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Integer], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox[
                    "2", FontFamily -> "Arial", FontWeight -> Normal]], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[Integer], 2]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "BoundingBoxes", FontColor -> RGBColor[0.6, 0.4, 0.2], 
                    FontFamily -> "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox["4", FontFamily -> "Arial", FontWeight -> 
                    Normal]], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[Real], 4]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real]\
, 4], TypeSystem`AnyLength]", ShowStringCharacters -> True, NumberMarks -> 
                    True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], TypeSystem`AnyLength]], 
                    Editable -> True, AutoDelete -> True]], "Input", 
                    FontTracking -> "Plain"], TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], TypeSystem`AnyLength], 
                    InputForm], "Input"]], Method -> "Preemptive", 
                    PassEventsDown -> True, PassEventsUp -> False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "BoundingBoxLabels", FontColor -> RGBColor[0.6, 0.4, 0.2],
                     FontFamily -> "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Str", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[String]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[String]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[String], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[String], \
TypeSystem`AnyLength]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], TypeSystem`AnyLength]], Editable -> 
                    True, AutoDelete -> True]], "Input", FontTracking -> 
                    "Plain"], TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], TypeSystem`AnyLength], 
                    InputForm], "Input"]], Method -> "Preemptive", 
                    PassEventsDown -> True, PassEventsUp -> False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "ModifiedDate", FontColor -> RGBColor[0.6, 0.4, 0.2], 
                    FontFamily -> "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["D", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[DateObject]", ShowStringCharacters -> 
                    True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[DateObject]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[DateObject], InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}]}], "\[RightAssociation]"}], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Struct[{\"Type\", \"Dimensions\", \
\"BoundingBoxes\", \"BoundingBoxLabels\", \"ModifiedDate\"}, \
{TypeSystem`Atom[String], TypeSystem`Vector[TypeSystem`Atom[Integer], 2], \
TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real], 4], \
TypeSystem`AnyLength], TypeSystem`Vector[TypeSystem`Atom[String], \
TypeSystem`AnyLength], TypeSystem`Atom[DateObject]}]", ShowStringCharacters -> 
                    True, NumberMarks -> True], 
                    InputForm[
                    
                    TypeSystem`Struct[{
                    "Type", "Dimensions", "BoundingBoxes", 
                    "BoundingBoxLabels", "ModifiedDate"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], TypeSystem`AnyLength], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], TypeSystem`AnyLength], 
                    TypeSystem`Atom[DateObject]}]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    
                    TypeSystem`Struct[{
                    "Type", "Dimensions", "BoundingBoxes", 
                    "BoundingBoxLabels", "ModifiedDate"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], TypeSystem`AnyLength], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], TypeSystem`AnyLength], 
                    TypeSystem`Atom[DateObject]}], InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], "}"}], 
                   StyleBox[
                   "2", FontFamily -> "Arial", FontWeight -> Normal]], 
                  Cell[
                   BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Struct[{\"Type\", \
\"Dimensions\", \"BoundingBoxes\", \"BoundingBoxLabels\", \"ModifiedDate\"}, \
{TypeSystem`Atom[String], TypeSystem`Vector[TypeSystem`Atom[Integer], 2], \
TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real], 4], \
TypeSystem`AnyLength], TypeSystem`Vector[TypeSystem`Atom[String], \
TypeSystem`AnyLength], TypeSystem`Atom[DateObject]}], 2]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    
                    TypeSystem`Struct[{
                    "Type", "Dimensions", "BoundingBoxes", 
                    "BoundingBoxLabels", "ModifiedDate"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], TypeSystem`AnyLength], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], TypeSystem`AnyLength], 
                    TypeSystem`Atom[DateObject]}], 2]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                  TooltipDelay -> 0.25], 
                 EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    
                    TypeSystem`Struct[{
                    "Type", "Dimensions", "BoundingBoxes", 
                    "BoundingBoxLabels", "ModifiedDate"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], TypeSystem`AnyLength], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], TypeSystem`AnyLength], 
                    TypeSystem`Atom[DateObject]}], 2], InputForm], "Input"]], 
                   Method -> "Preemptive", PassEventsDown -> True, 
                   PassEventsUp -> False}]], FontTracking -> "Condensed", 
                FontWeight -> "Bold", SpanMinSize -> 1.3, SpanMaxSize -> 3.], 
               Deploy, DefaultBaseStyle -> "Deploy"], 
              MouseAppearanceTag["LinkHand"]], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Type", "Dimensions", "BoundingBoxes", "BoundingBoxLabels", 
                "ModifiedDate"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Vector[
                 TypeSystem`Atom[Integer], 2], 
                TypeSystem`Vector[
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 4], TypeSystem`AnyLength], 
                TypeSystem`Vector[
                 TypeSystem`Atom[String], TypeSystem`AnyLength], 
                TypeSystem`Atom[DateObject]}], 2]], TooltipDelay -> 1.5], 
           EventHandlerTag[{"MouseClicked" :> Print[
               InputForm[
                TypeSystem`Vector[
                 
                 TypeSystem`Struct[{
                  "Type", "Dimensions", "BoundingBoxes", "BoundingBoxLabels", 
                   "ModifiedDate"}, {
                   TypeSystem`Atom[String], 
                   TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                   TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], TypeSystem`AnyLength], 
                   TypeSystem`Vector[
                    TypeSystem`Atom[String], TypeSystem`AnyLength], 
                   TypeSystem`Atom[DateObject]}], 2]]]}]], 
          AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
          RowBox[{"2", "rows"}]}], 
        BaseStyle -> {
         FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
          GrayLevel[0.4], Editable -> False, Selectable -> False}, 
        ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
        Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
       "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
     GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
     FrameStyle -> RGBColor[0, 0, 0, 0.4], GridBoxDividers -> {"Columns" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.09]}, 
         RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
         RGBColor[0, 0, 0, 0.4], 
         RGBColor[0, 0, 0, 0.3], {
          RGBColor[0, 0, 0, 0.08]}, 
         RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> {1.5, 1.2}, 
     GridBoxBackground -> {"Columns" -> {}, "Rows" -> {
         RGBColor[0.92, 0.92, 0.9]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
     GridFrameMargins -> {{2, 3}, {1, 3}}, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      RowMinHeight -> 1.3],"Dataset[{__Association}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Insert them:", "Item"],

Cell[TextData[{
 StyleBox["Note:",
  FontWeight->"Bold"],
 " its more efficient to add documents in bulk, as CollectionInsert uses a \
specially optimized bulk_operation API for this case). We can insert JSON \
strings, associations, lists of associations (or json strings) and datasets. \
The only requirement at the moment is that the structure be JSONizable:"
}], "Subitem"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollectionInsert", "[", 
  RowBox[{"$testCollection", ",", "data"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"nInserted\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"nMatched\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"nModified\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"nRemoved\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"nUpserted\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"writeErrors\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reading + querying documents", "Subsection"],

Cell[CellGroupData[{

Cell["Counting", "Subsubsection"],

Cell["Count number of docs in collection:", "Item"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollectionCount", "@", "$testCollection"}]], "Input"],

Cell[BoxData["4"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Count number of docs in collection that contain a Hyena as a \
BoundingBoxLabels:\
\>", "Item"],

Cell[TextData[{
 "MongoDB has a fairly rich and simple query language (see ",
 ButtonBox["here for more).",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://docs.mongodb.org/manual/tutorial/query-documents/"], None},
  ButtonNote->"https://docs.mongodb.org/manual/tutorial/query-documents/"]
}], "Subitem"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollectionCount", "[", 
  RowBox[{"$testCollection", ",", 
   RowBox[{"<|", 
    RowBox[{"\"\<BoundingBoxLabels\>\"", "\[Rule]", " ", "\"\<Hyena\>\""}], 
    "|>"}]}], "]"}]], "Input"],

Cell[BoxData["2"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reading", "Subsubsection"],

Cell["\<\
Create iterator that iterates over all docs in the collection:\
\>", "Item"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iter", "=", 
  RowBox[{"CollectionFind", "[", "$testCollection", "]"}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"Iterator", "[", 
   TagBox[GridBox[{
      {
       StyleBox["MongoIterator", "Text",
        StripOnInput->False], "\[SpanFromLeft]"},
      {
       StyleBox["\<\"iter\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 
          Rational[2, 3], 0],
        FrontFaceColor->RGBColor[0, 
          Rational[2, 3], 0],
        BackFaceColor->RGBColor[0, 
          Rational[2, 3], 0],
        GraphicsColor->RGBColor[0, 
          Rational[2, 3], 0],
        FontSlant->Italic,
        FontColor->RGBColor[0, 
          Rational[2, 3], 0]], 
       TagBox[
        RowBox[{"MongoIterator", "[", "1", "]"}],
        Short]}
     },
     AutoDelete->False,
     FrameStyle->GrayLevel[0.85],
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxBackground->{"Columns" -> {{
          GrayLevel[1]}}},
     GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxItemStyle->{"Columns" -> {{"Output"}}, "Rows" -> {{"Output"}}},
     GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
    "Grid"], "]"}],
  GeneralUtilities`Iterator[MongoLink`MongoIterator, 
   Replace[
    Iterators`iter$3[], $Failed :> GeneralUtilities`IteratorExhausted], 
   None]]], "Output"]
}, Open  ]],

Cell["Read doc by doc:", "Item"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Read", "@", "iter"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"_id\"\>", "\[Rule]", 
    RowBox[{"MongoObjectID", "[", "\<\"56d59a77d682ee0f80587401\"\>", "]"}]}],
    ",", 
   RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Image\"\>"}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"288", ",", "299"}], "}"}]}], ",", 
   RowBox[{"\<\"BoundingBoxes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3.3`", ",", "6.6`", ",", "2.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.6`", ",", "3.4`", ",", "2.2`", ",", "7"}], "}"}]}], "}"}]}],
    ",", 
   RowBox[{"\<\"BoundingBoxLabels\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Dog\"\>", ",", "\<\"Lion\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"ModifiedDate\"\>", 
    "\[Rule]", "\<\"                     12\\n<|$date -> 1.45684 10  \
|>\"\>"}]}], "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Read", "@", "iter"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"_id\"\>", "\[Rule]", 
    RowBox[{"MongoObjectID", "[", "\<\"56d59a77d682ee0f80587402\"\>", "]"}]}],
    ",", 
   RowBox[{"\<\"Type\"\>", "\[Rule]", "\<\"Image\"\>"}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"234", ",", "334"}], "}"}]}], ",", 
   RowBox[{"\<\"BoundingBoxes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0.3`", ",", "6.7`", ",", "6.6`", ",", "2.3`"}], "}"}], "}"}]}],
    ",", 
   RowBox[{"\<\"BoundingBoxLabels\"\>", "\[Rule]", 
    RowBox[{"{", "\<\"Hyena\"\>", "}"}]}], ",", 
   RowBox[{"\<\"ModifiedDate\"\>", 
    "\[Rule]", "\<\"                     12\\n<|$date -> 1.45684 10  \
|>\"\>"}]}], "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell["If nothing is left to iterator over:", "Item"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Read", "@", "iter"}]], "Input"],

Cell[BoxData["IteratorExhausted"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Get all docs (use ReadList) whose first image dimension is greater than 250:\
\>", "Item"],

Cell["\<\
Note that Mongo uses 0 indexing for arrays and that special op $gt is used \
for >:\
\>", "Subitem"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "@", 
   RowBox[{"ReadList", "@", 
    RowBox[{"CollectionFind", "[", 
     RowBox[{"$testCollection", ",", " ", 
      RowBox[{"<|", 
       RowBox[{"\"\<Dimensions.0\>\"", " ", "\[Rule]", " ", 
        RowBox[{"<|", 
         RowBox[{"\"\<$gt\>\"", "\[Rule]", " ", "250"}], "|>"}]}], "|>"}]}], 
     " ", "]"}]}]}], "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 TagBox[
  TemplateBox[{GridBox[{{
       StyleBox["\"_id\"", 
        GrayLevel[0.3]], 
       StyleBox["\"Type\"", 
        GrayLevel[0.3]], 
       StyleBox["\"Dimensions\"", 
        GrayLevel[0.3]], 
       StyleBox["\"BoundingBoxes\"", 
        GrayLevel[0.3]], 
       StyleBox["\"BoundingBoxLabels\"", 
        GrayLevel[0.3]], 
       StyleBox["\"ModifiedDate\"", 
        GrayLevel[0.3]]}, {
       InterpretationBox[
        TagBox[
         RowBox[{"MongoObjectID", "[", "\"56d59a77d682ee0f80587401\"", "]"}], 
         Short[#, 5]& ], 
        MongoLink`MongoObjectID["56d59a77d682ee0f80587401"]], 
       StyleBox["\"Image\"", FontColor -> GrayLevel[0.4]], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 288, ",", 299, "\[ThinSpace]", "}"}], 
        LineBreakWithin -> Automatic], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 
          RowBox[{"{", 
            StyleBox[
             SubscriptBox["\[CenterEllipsis]", "4"], 
             GrayLevel[0.5]], "}"}], ",", 
          RowBox[{"{", 
            StyleBox[
             SubscriptBox["\[CenterEllipsis]", "4"], 
             GrayLevel[0.5]], "}"}], "\[ThinSpace]", "}"}], LineBreakWithin -> 
        Automatic], 
       StyleBox[
        RowBox[{"{", "\[ThinSpace]", 
          StyleBox["\"Dog\"", FontColor -> GrayLevel[0.4]], ",", 
          StyleBox["\"Lion\"", FontColor -> GrayLevel[0.4]], "\[ThinSpace]", 
          "}"}], LineBreakWithin -> Automatic], 
       StyleBox[
       "\"                     12\\n<|$date -> 1.45684 10  |>\"", FontColor -> 
        GrayLevel[0.4]]}, {
       ItemBox[
        RowBox[{
          TagBox[
           TooltipBox["4 levels", 
            InterpretationBox[
             TagBox[
              TagBox[
               StyleBox[
                TagBox[
                 TooltipBox[
                  SubscriptBox[
                   RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{
                    StyleBox[
                    "_id", FontColor -> RGBColor[0.6, 0.4, 0.2], FontFamily -> 
                    "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Any", FontColor -> RGBColor[
                    Rational[2, 3], 0, 0], FontFamily -> "Monaco"], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`AnyType", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[TypeSystem`AnyType], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[TypeSystem`AnyType, InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "Type", FontColor -> RGBColor[0.6, 0.4, 0.2], FontFamily -> 
                    "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Str", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[String]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[String]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[String], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "Dimensions", FontColor -> RGBColor[0.6, 0.4, 0.2], 
                    FontFamily -> "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Int", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Integer]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Integer]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Integer], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox[
                    "2", FontFamily -> "Arial", FontWeight -> Normal]], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[Integer], 2]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "BoundingBoxes", FontColor -> RGBColor[0.6, 0.4, 0.2], 
                    FontFamily -> "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Real", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[Real]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[Real]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[Real], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox[
                    "4", FontFamily -> "Arial", FontWeight -> Normal]], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[Real], 4]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox[
                    "2", FontFamily -> "Arial", FontWeight -> Normal]], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real]\
, 4], 2]", ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], 2]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], 2], InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "BoundingBoxLabels", FontColor -> RGBColor[0.6, 0.4, 0.2],
                     FontFamily -> "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    SubscriptBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Str", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[String]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[String]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[String], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                    StyleBox["2", FontFamily -> "Arial", FontWeight -> 
                    Normal]], FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Atom[String], 2]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], 2]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                    TooltipDelay -> 0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], 2], InputForm], "Input"]], 
                    Method -> "Preemptive", PassEventsDown -> True, 
                    PassEventsUp -> False}]]}], 
                    StyleBox[
                    ",", FontColor -> GrayLevel[0.65], FontWeight -> "Thin"], 
                    
                    RowBox[{
                    StyleBox[
                    "ModifiedDate", FontColor -> RGBColor[0.6, 0.4, 0.2], 
                    FontFamily -> "Verdana", FontWeight -> Normal], 
                    StyleBox[
                    "\[Rule]", FontColor -> GrayLevel[0.65], FontWeight -> 
                    "Thin"], 
                    TagBox[
                    TooltipBox[
                    FrameBox[
                    StyleBox["Str", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontFamily -> "Monaco"], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Atom[String]", ShowStringCharacters -> True, 
                    NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Atom[String]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Atom[String], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}]}], "\[RightAssociation]"}], FrameStyle -> 
                    Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    GrayLevel[0.9], None]], BaselinePosition -> Baseline, 
                    FrameMargins -> {{0, 0}, {2, 2}}, ContentPadding -> 
                    False], 
                    Cell[
                    BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Struct[{\"_id\", \"Type\", \"Dimensions\", \
\"BoundingBoxes\", \"BoundingBoxLabels\", \"ModifiedDate\"}, \
{TypeSystem`AnyType, TypeSystem`Atom[String], \
TypeSystem`Vector[TypeSystem`Atom[Integer], 2], \
TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real], 4], 2], \
TypeSystem`Vector[TypeSystem`Atom[String], 2], TypeSystem`Atom[String]}]", 
                    ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    
                    TypeSystem`Struct[{
                    "_id", "Type", "Dimensions", "BoundingBoxes", 
                    "BoundingBoxLabels", "ModifiedDate"}, {TypeSystem`AnyType, 
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], 2], 
                    TypeSystem`Atom[String]}]], Editable -> True, AutoDelete -> 
                    True]], "Input", FontTracking -> "Plain"], TooltipDelay -> 
                    0.25], 
                    EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    
                    TypeSystem`Struct[{
                    "_id", "Type", "Dimensions", "BoundingBoxes", 
                    "BoundingBoxLabels", "ModifiedDate"}, {TypeSystem`AnyType, 
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], 2], 
                    TypeSystem`Atom[String]}], InputForm], "Input"]], Method -> 
                    "Preemptive", PassEventsDown -> True, PassEventsUp -> 
                    False}]]}], "}"}], 
                   StyleBox[
                   "1", FontFamily -> "Arial", FontWeight -> Normal]], 
                  Cell[
                   BoxData[
                    InterpretationBox[
                    StyleBox[
                    "TypeSystem`Vector[TypeSystem`Struct[{\"_id\", \"Type\", \
\"Dimensions\", \"BoundingBoxes\", \"BoundingBoxLabels\", \"ModifiedDate\"}, \
{TypeSystem`AnyType, TypeSystem`Atom[String], \
TypeSystem`Vector[TypeSystem`Atom[Integer], 2], \
TypeSystem`Vector[TypeSystem`Vector[TypeSystem`Atom[Real], 4], 2], \
TypeSystem`Vector[TypeSystem`Atom[String], 2], TypeSystem`Atom[String]}], 1]",
                     ShowStringCharacters -> True, NumberMarks -> True], 
                    InputForm[
                    TypeSystem`Vector[
                    
                    TypeSystem`Struct[{
                    "_id", "Type", "Dimensions", "BoundingBoxes", 
                    "BoundingBoxLabels", "ModifiedDate"}, {TypeSystem`AnyType, 
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], 2], 
                    TypeSystem`Atom[String]}], 1]], Editable -> True, 
                    AutoDelete -> True]], "Input", FontTracking -> "Plain"], 
                  TooltipDelay -> 0.25], 
                 EventHandlerTag[{"MouseClicked" :> CellPrint[
                    Cell[
                    ToString[
                    TypeSystem`Vector[
                    
                    TypeSystem`Struct[{
                    "_id", "Type", "Dimensions", "BoundingBoxes", 
                    "BoundingBoxLabels", "ModifiedDate"}, {TypeSystem`AnyType, 
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], 2], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], 2], 
                    TypeSystem`Atom[String]}], 1], InputForm], "Input"]], 
                   Method -> "Preemptive", PassEventsDown -> True, 
                   PassEventsUp -> False}]], FontTracking -> "Condensed", 
                FontWeight -> "Bold", SpanMinSize -> 1.3, SpanMaxSize -> 3.], 
               Deploy, DefaultBaseStyle -> "Deploy"], 
              MouseAppearanceTag["LinkHand"]], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "_id", "Type", "Dimensions", "BoundingBoxes", 
                "BoundingBoxLabels", "ModifiedDate"}, {TypeSystem`AnyType, 
                TypeSystem`Atom[String], 
                TypeSystem`Vector[
                 TypeSystem`Atom[Integer], 2], 
                TypeSystem`Vector[
                 TypeSystem`Vector[
                  TypeSystem`Atom[Real], 4], 2], 
                TypeSystem`Vector[
                 TypeSystem`Atom[String], 2], 
                TypeSystem`Atom[String]}], 1]], TooltipDelay -> 1.5], 
           EventHandlerTag[{"MouseClicked" :> Print[
               InputForm[
                TypeSystem`Vector[
                 
                 TypeSystem`Struct[{
                  "_id", "Type", "Dimensions", "BoundingBoxes", 
                   "BoundingBoxLabels", "ModifiedDate"}, {
                  TypeSystem`AnyType, 
                   TypeSystem`Atom[String], 
                   TypeSystem`Vector[
                    TypeSystem`Atom[Integer], 2], 
                   TypeSystem`Vector[
                    TypeSystem`Vector[
                    TypeSystem`Atom[Real], 4], 2], 
                   TypeSystem`Vector[
                    TypeSystem`Atom[String], 2], 
                   TypeSystem`Atom[String]}], 1]]]}]], 
          AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
          RowBox[{"1", "rows"}]}], 
        BaseStyle -> {
         FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
          GrayLevel[0.4], Editable -> False, Selectable -> False}, 
        ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
        Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
       "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
       "\[SpanFromLeft]"}}, 
     GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
     FrameStyle -> RGBColor[0, 0, 0, 0.4], GridBoxDividers -> {"Columns" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.09]}, 
         RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
         RGBColor[0, 0, 0, 0.4], 
         RGBColor[0, 0, 0, 0.3], {
          RGBColor[0, 0, 0, 0.08]}, 
         RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> {1.5, 1.2}, 
     GridBoxBackground -> {"Columns" -> {}, "Rows" -> {
         RGBColor[0.92, 0.92, 0.9]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
     GridFrameMargins -> {{2, 3}, {1, 3}}, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      RowMinHeight -> 1.3],"Dataset[{__Association}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MongoObjectID", "Subsubsection"],

Cell["\<\
A note about MongoObjectID: this is an automatically generated unique ID that \
MongoDB creates when you insert Documents. It contains a bunch of info, like \
the servers clock time when the Document was created, the ID of the machine \
which created the Document, etc:\
\>", "Item"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MongoObjectID", "[", "\"\<56b88a74d682ee08887278f0\>\"", "]"}], "//",
   "Normal"}]], "Input",
 CellChangeTimes->{{3.663936675217455*^9, 3.663936678093801*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GenerationTime\"\>", "\[Rule]", 
    TemplateBox[{RowBox[{"\"Mon 8 Feb 2016 14:30:44\"", 
        StyleBox[
         RowBox[{"\"GMT+\"", "\[InvisibleSpace]", "2.`"}], FontColor -> 
         GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2016", ",", "2", ",", "8"}], "}"}], ",", 
          RowBox[{"TimeObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"14", ",", "30", ",", "44.`"}], "}"}], ",", 
              RowBox[{"TimeZone", "\[Rule]", "2.`"}]}], "]"}], ",", 
          RowBox[{"TimeZone", "\[Rule]", "2.`"}]}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"MachineID\"\>", "\[Rule]", "14058222"}], ",", 
   RowBox[{"\<\"ProcessID\"\>", "\[Rule]", "2184"}], ",", 
   RowBox[{"\<\"Counter\"\>", "\[Rule]", "7502064"}]}], 
  "\[RightAssociation]"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Modifying Documents", "Subsection"],

Cell[CellGroupData[{

Cell["CollectionUpdate", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
This is a dangerous operation, as you can\[CloseCurlyQuote]t easily undo \
modifications.\
\>", "Item"],

Cell[CellGroupData[{

Cell["\<\
Always first use CollectionFind to ensure that your query is correct.\
\>", "Subitem"],

Cell["Read the doc carefully:", "Subitem"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CollectionUpdate"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"\!\(\*RowBox[{\\\"CollectionUpdate\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"MongoCollection\\\", \\\"[\\\", RowBox[{StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}], \\\",\\\",  StyleBox[\\\"query\\\
\", \\\"TI\\\"], \\\",\\\",  StyleBox[\\\"update\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\)\[VeryThinSpace] update a single document in the collection \
MongoCollection[\[Ellipsis]] which satisfies the \
\!\(\*StyleBox[\\\"query\\\", \\\"TI\\\"]\)\[VeryThinSpace] association. The \
\!\(\*StyleBox[\\\"update\\\", \\\"TI\\\"]\)\[VeryThinSpace] document will \
replace the contents of the matched document (exept for _id field). To update \
only individual fields, use the $set operator. If no document satisfies \
\!\(\*StyleBox[\\\"query\\\", \\\"TI\\\"]\)\[VeryThinSpace], nothing is done, \
unless the Option \\\"Upsert\\\" is set to True. To update all documents \
satisfying the \!\(\*StyleBox[\\\"query\\\", \\\"TI\\\"]\)\[VeryThinSpace], \
set the option \\\"Multi\\\" to True.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info983665842172-2073150"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Lets set the image dimensions of all documents containing a Hyena in \
BoundingBoxLabels to {2, 2}:\
\>", "Item"],

Cell[TextData[{
 "Use the $set operator to only change certain fields. ",
 ButtonBox["See here",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://docs.mongodb.org/manual/reference/operator/update/set/"], 
    None},
  ButtonNote->
   "https://docs.mongodb.org/manual/reference/operator/update/set/"],
 "."
}], "Subitem"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"query", "=", 
   RowBox[{"<|", 
    RowBox[{"\"\<BoundingBoxLabels\>\"", "\[Rule]", " ", "\"\<Hyena\>\""}], 
    "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"updateDoc", "=", 
   RowBox[{"<|", 
    RowBox[{"\"\<$set\>\"", "\[Rule]", 
     RowBox[{"<|", 
      RowBox[{"\"\<Dimensions\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}], "|>"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CollectionUpdate", "[", 
  RowBox[{"$testCollection", ",", "query", ",", " ", "updateDoc"}], 
  "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"#Dimensions", "&"}], " ", "/@", 
  RowBox[{"ReadList", "@", 
   RowBox[{"CollectionFind", "[", "$testCollection", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"288", ",", "299"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
If you don\[CloseCurlyQuote]t use the $set operator, the entire document gets \
replaced (except for the primary key)\
\>", "Item"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"updateDoc", "=", 
   RowBox[{"<|", 
    RowBox[{"\"\<NewKey\>\"", "\[Rule]", " ", "1"}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CollectionUpdate", "[", 
  RowBox[{"$testCollection", ",", "query", ",", " ", "updateDoc"}], 
  "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadList", "@", 
  RowBox[{"CollectionFind", "[", "$testCollection", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Upsert: normally, if no document matches the query, nothing is done. To \
modify this so that the document is inserted if it doesn\[CloseCurlyQuote]t \
already exist, use Upsert option\
\>", "Item"],

Cell["\<\
This is a useful way of adding new documents to a collection without creating \
duplicates.\
\>", "Subitem"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollectionCount", "@", "$testCollection"}]], "Input"],

Cell[BoxData["2"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Nothing", " ", "matches", " ", "this", " ", "query"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"query", "=", 
    RowBox[{"<|", 
     RowBox[{
     "\"\<BoundingBoxLabels\>\"", "\[Rule]", " ", "\"\<asdfjoisdjf\>\""}], 
     "|>"}]}], ";"}], " "}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"updateDoc", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<SegmentationMasks\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
     RowBox[{"\"\<WordNetID\>\"", "\[Rule]", " ", "\"\<n82837\>\""}]}], 
    "|>"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CollectionUpdate", "[", 
  RowBox[{"$testCollection", ",", "query", ",", " ", "updateDoc", ",", 
   RowBox[{"\"\<Upsert\>\"", "\[Rule]", " ", "True"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "@", 
  RowBox[{"ReadList", "@", 
   RowBox[{"CollectionFind", "[", "$testCollection", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"_id\"\>", "\[Rule]", 
    RowBox[{"MongoObjectID", "[", "\<\"56d5b3da290e2f5f17b9d687\"\>", "]"}]}],
    ",", 
   RowBox[{"\<\"SegmentationMasks\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"WordNetID\"\>", "\[Rule]", "\<\"n82837\"\>"}]}], 
  "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell["\<\
You can update multiple documents at a time using the \
\[OpenCurlyDoubleQuote]MultiDocumentUpdate\[CloseCurlyDoubleQuote] option.\
\>", "Item"]
}, Closed]],

Cell[CellGroupData[{

Cell["CollectionRemove", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CollectionRemove"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"\!\(\*RowBox[{\\\"CollectionRemove\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"MongoCollection\\\", \\\"[\\\", RowBox[{StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}], \\\",\\\",  StyleBox[\\\"query\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\)\[VeryThinSpace] removes a single document \
from MongoCollection[\[Ellipsis]] that satisfies the query $query. To remove \
all documents, set the Option \\\"MultiDocumentUpdate\\\" to  \\nTrue.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info243665843238-5699381"]
}, Open  ]],

Cell["Remove a single document satisfying some query:", "Item"],

Cell[BoxData[
 RowBox[{"CollectionRemove", "[", 
  RowBox[{"$testCollection", ",", 
   RowBox[{"<|", 
    RowBox[{"\"\<BoundingBoxLabels\>\"", "\[Rule]", " ", "\"\<Hyena\>\""}], 
    "|>"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Remove all docs from a collection:", "Item"],

Cell["Very dangerous!!", "Subitem"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CollectionCount", "@", "$testCollection"}], "\[IndentingNewLine]", 
 RowBox[{"CollectionRemove", "[", 
  RowBox[{"$testCollection", ",", 
   RowBox[{"<|", "|>"}], ",", 
   RowBox[{"\"\<MultiDocumentUpdate\>\"", "\[Rule]", " ", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CollectionCount", "@", "$testCollection"}]}], "Input"],

Cell[BoxData["3"], "Output"],

Cell[BoxData["0"], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell["Cleaning up", "Subsection"],

Cell[CellGroupData[{

Cell["Appendix A: Types", "Subsection"],

Cell["\<\
The following are the native MongoDB types. It is strongly preferred to use \
only these types, unless not avoidable (eg Entity types). First, all the JSON \
types:\
\>", "Text",
 CellChangeTimes->{{3.663839731338213*^9, 3.663839796106612*^9}, {
  3.6638402708532467`*^9, 3.66384028419461*^9}}],

Cell["String", "Item",
 CellChangeTimes->{{3.663839761458127*^9, 3.663839782896295*^9}}],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{"\"\<key\>\"", "\[Rule]", " ", "\"\<The One Went In\>\""}], 
  "|>"}]], "Input",
 CellChangeTimes->{{3.663839839591378*^9, 3.6638398446660852`*^9}, {
  3.6638399010424747`*^9, 3.6638399073865356`*^9}}],

Cell["Integer", "Item",
 CellChangeTimes->{{3.663839761458127*^9, 3.6638398000569963`*^9}}],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{"\"\<key\>\"", "->", "456"}], "|>"}]], "Input",
 CellChangeTimes->{{3.663839837423328*^9, 3.663839838050571*^9}, {
  3.663839910308013*^9, 3.663839915770693*^9}}],

Cell["Real", "Item",
 CellChangeTimes->{{3.663839761458127*^9, 3.6638398035472927`*^9}}],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{"\"\<key\>\"", "->", "1.2344"}], "|>"}]], "Input",
 CellChangeTimes->{{3.663839834895488*^9, 3.6638398356666813`*^9}, {
  3.6638399195941*^9, 3.663839928026494*^9}}],

Cell["Null (this is the preferred way to indicate missing data)", "Item",
 CellChangeTimes->{{3.663839761458127*^9, 3.6638398073311653`*^9}, {
  3.663839933378375*^9, 3.663839943210112*^9}}],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{"\"\<key\>\"", "\[Rule]", " ", "Null"}], "|>"}]], "Input",
 CellChangeTimes->{{3.6638398286589003`*^9, 3.663839832978544*^9}, {
  3.663839930146323*^9, 3.663839948930649*^9}}],

Cell["Boolean (True + False)", "Item",
 CellChangeTimes->{{3.663839761458127*^9, 3.663839815954563*^9}}],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{"\"\<key\>\"", "\[Rule]", " ", "True"}], "|>"}]], "Input",
 CellChangeTimes->{{3.663839823092266*^9, 3.663839826002366*^9}, {
  3.6638399513799877`*^9, 3.663839960612269*^9}}],

Cell["Arrays of the basic types", "Item",
 CellChangeTimes->{{3.663839761458127*^9, 3.663839815954563*^9}, {
  3.66383986223569*^9, 3.663839866466343*^9}}],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{"\"\<key\>\"", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"1.2", ",", "5", ",", "5.6", ",", "True"}], "}"}]}], 
  "|>"}]], "Input",
 CellChangeTimes->{{3.663839870309678*^9, 3.66383989591465*^9}, {
  3.6638399638262987`*^9, 3.663839970522553*^9}}],

Cell["If in doubt, check that its JSONizable!", "Text",
 CellChangeTimes->{{3.663839974450012*^9, 3.663839983762435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Developer`WriteRawJSONString", "@", 
  RowBox[{"<|", 
   RowBox[{"\"\<key\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.2", ",", "5", ",", "5.6", ",", "True"}], "}"}]}], 
   "|>"}]}]], "Input",
 CellChangeTimes->{{3.663839985292852*^9, 3.663839993790082*^9}}],

Cell[BoxData["\<\"{\\n\\t\\\"key\\\":[\\n\\t\\t1.2,\\n\\t\\t5,\\n\\t\\t5.6,\\\
n\\t\\ttrue\\n\\t]\\n}\"\>"], "Output",
 CellChangeTimes->{3.663839994151041*^9}]
}, Open  ]],

Cell["\<\
In addition to the basic JSON types, there are some special types:\
\>", "Text",
 CellChangeTimes->{{3.663840005923443*^9, 3.663840023922525*^9}}],

Cell["DateObject:", "Item",
 CellChangeTimes->{{3.663839761458127*^9, 3.663839815954563*^9}, {
  3.66383986223569*^9, 3.663839866466343*^9}, {3.663840037627906*^9, 
  3.663840038002324*^9}, {3.663840138682234*^9, 3.663840142242614*^9}, {
  3.663937248725317*^9, 3.66393724872899*^9}}],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{"\"\<key\>\"", "\[Rule]", " ", 
   TemplateBox[{RowBox[{"\"Sun 7 Feb 2016 18:50:55\"", 
       StyleBox[
        RowBox[{"\"GMT+\"", "\[InvisibleSpace]", "5.5`"}], FontColor -> 
        GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2016", ",", "2", ",", "7"}], "}"}], ",", 
         RowBox[{"TimeObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"18", ",", "50", ",", "55.315639`"}], "}"}], ",", 
             RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}], ",", 
         RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}]},
    "DateObject",
    Editable->False]}], "|>"}]], "Input"],

Cell["ObjectID:", "Item",
 CellChangeTimes->{{3.663839761458127*^9, 3.663839815954563*^9}, {
  3.66383986223569*^9, 3.663839866466343*^9}, {3.663840037627906*^9, 
  3.663840038002324*^9}, {3.663840138682234*^9, 3.663840142242614*^9}, {
  3.663937248725317*^9, 3.663937268768491*^9}}],

Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{"\"\<key\>\"", "\[Rule]", " ", 
   RowBox[{"MongoObjectID", "[", "\"\<56b74286d682ee04a52df97f\>\"", "]"}]}], 
  "|>"}]], "Input",
 CellChangeTimes->{{3.663937284390059*^9, 3.663937314113028*^9}}],

Cell[TextData[{
 "MongoDB has a fairly rich and simple query language (see ",
 ButtonBox["here",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://docs.mongodb.org/manual/tutorial/query-documents/"], None},
  ButtonNote->"https://docs.mongodb.org/manual/tutorial/query-documents/"],
 "). A simple query:"
}], "Text",
 CellChangeTimes->{{3.6639367125697613`*^9, 3.663936730032454*^9}, {
  3.66393677569783*^9, 3.663936854264822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iter", "=", 
  RowBox[{"CollectionFind", "[", 
   RowBox[{"coll", ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<age\>\"", "\[Rule]", " ", "80"}], "|>"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.663936734289283*^9, 3.663936745632872*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["MongoIterator", "Text",
      StripOnInput->False], "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.85],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxItemStyle->{"Columns" -> {"Text", "Output"}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.6639367462148523`*^9, 3.6639367948142233`*^9, 
  3.6639368475536003`*^9, 3.663936918858335*^9, 3.663938347499675*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"ReadList", "@", "iter"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  TemplateBox[{GridBox[{{
       StyleBox["\"_id\"", 
        GrayLevel[0.3]], 
       StyleBox["\"class\"", 
        GrayLevel[0.3]], 
       StyleBox["\"age\"", 
        GrayLevel[0.3]], 
       StyleBox["\"sex\"", 
        GrayLevel[0.3]], 
       StyleBox["\"survived\"", 
        GrayLevel[0.3]]}, {
       InterpretationBox[
        TagBox[
         RowBox[{"MongoObjectID", "[", "\"56b88a74d682ee08887278ed\"", "]"}], 
         Short[#, 5]& ], 
        MongoLink`MongoObjectID["56b88a74d682ee08887278ed"]], 
       StyleBox["\"1st\"", FontColor -> GrayLevel[0.4]], 80, 
       StyleBox["\"male\"", FontColor -> GrayLevel[0.4]], 
       InterpretationBox["True", True]}, {
       ItemBox[
        RowBox[{"2 levels", 
          AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
          RowBox[{"1", "rows"}]}], 
        BaseStyle -> {
         FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
          GrayLevel[0.4], Editable -> False, Selectable -> False}, 
        ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
        Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
       "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
     GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
     FrameStyle -> RGBColor[0, 0, 0, 0.4], GridBoxDividers -> {"Columns" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.09]}, 
         RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
         RGBColor[0, 0, 0, 0.4], 
         RGBColor[0, 0, 0, 0.3], {
          RGBColor[0, 0, 0, 0.08]}, 
         RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> {1.5, 1.2}, 
     GridBoxBackground -> {"Columns" -> {}, "Rows" -> {
         RGBColor[0.92, 0.92, 0.9]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
     GridFrameMargins -> {{2, 3}, {1, 3}}, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      RowMinHeight -> 1.3],"Dataset[{__Association}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6639367541896152`*^9, 3.663936796098957*^9, 
  3.663936920004117*^9, 3.6639383504667263`*^9}]
}, Open  ]],

Cell["Doing this on the WL side instead:", "Text",
 CellChangeTimes->{{3.66393692232368*^9, 3.663936934936695*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"titanicDataset", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#age", " ", "\[Equal]", " ", "80"}], "&"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.663936937841301*^9, 3.663936951080945*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{GridBox[{{
       StyleBox["\"_id\"", 
        GrayLevel[0.3]], 
       StyleBox["\"class\"", 
        GrayLevel[0.3]], 
       StyleBox["\"age\"", 
        GrayLevel[0.3]], 
       StyleBox["\"sex\"", 
        GrayLevel[0.3]], 
       StyleBox["\"survived\"", 
        GrayLevel[0.3]]}, {
       InterpretationBox[
        TagBox[
         RowBox[{"MongoObjectID", "[", "\"56b88a74d682ee08887278ed\"", "]"}], 
         Short[#, 5]& ], 
        MongoLink`MongoObjectID["56b88a74d682ee08887278ed"]], 
       InterpretationBox[
        StyleBox["\"1st\"", 
         GrayLevel[0.45]], "1st"], 
       InterpretationBox[
        TagBox["80", Short[#, 5]& ], 80], 
       InterpretationBox[
        StyleBox["\"male\"", 
         GrayLevel[0.45]], "male"], 
       InterpretationBox["True", True]}, {
       ItemBox[
        RowBox[{"2 levels", 
          AdjustmentBox[" | ", BoxBaselineShift -> -0.3], 
          RowBox[{"1", "rows"}]}], 
        BaseStyle -> {
         FontFamily -> "Helvetica", FontSize -> 10, FontColor -> 
          GrayLevel[0.4], Editable -> False, Selectable -> False}, 
        ItemSize -> {Automatic, Automatic}, Alignment -> {Left, Center}, 
        Background -> RGBColor[0.92, 0.92, 0.9]], "\[SpanFromLeft]", 
       "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
     GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
     FrameStyle -> RGBColor[0, 0, 0, 0.4], GridBoxDividers -> {"Columns" -> {
         RGBColor[0, 0, 0, 0.4], {
          RGBColor[0, 0, 0, 0.09]}, 
         RGBColor[0, 0, 0, 0.4]}, "Rows" -> {
         RGBColor[0, 0, 0, 0.4], 
         RGBColor[0, 0, 0, 0.3], {
          RGBColor[0, 0, 0, 0.08]}, 
         RGBColor[0, 0, 0, 0.4]}}, RowSpacings -> {1.5, 1.2}, 
     GridBoxBackground -> {"Columns" -> {}, "Rows" -> {
         RGBColor[0.92, 0.92, 0.9]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, ColumnSpacings -> 2.5, 
     GridFrameMargins -> {{2, 3}, {1, 3}}, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      RowMinHeight -> 1.3],"Dataset[{__Association}]"},
   "Dataset",
   DisplayFunction->(TagBox[
     StyleBox[#, {
      ShowAutoStyles -> False, LineBreakWithin -> False, FontWeight -> 
       "Light", FontFamily -> "Helvetica Neue", NumberMarks -> False, 
       SpanMaxSize -> 3, SpanMinSize -> 1., Editable -> False, Selectable -> 
       True, Background -> RGBColor[0.985, 0.98, 0.973], 
       LinebreakAdjustments -> {0.4, 5, 100, 0, 0.5}, LineIndent -> 0, 
       LineSpacing -> {1.1, 5}}], Deploy]& ),
   InterpretationFunction->(#2& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6639369513911963`*^9, 3.66393835267936*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Work", "Subchapter",
 CellChangeTimes->{{3.663809161330207*^9, 3.663809161656825*^9}, 
   3.663816197927302*^9}],

Cell[CellGroupData[{

Cell["Notes:", "Subsection",
 CellChangeTimes->{{3.663829042930532*^9, 3.663829044129134*^9}}],

Cell["Is this a bug?", "Item",
 CellChangeTimes->{{3.663829059402227*^9, 3.6638290731294317`*^9}, {
  3.663829241418641*^9, 3.663829243457204*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateObject", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<1970/6000000\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Year\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.663829248147563*^9, 3.6638292605536327`*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Tue 20 Jan 1970 17:37:12\"", 
     StyleBox[
      RowBox[{"\"GMT+\"", "\[InvisibleSpace]", "5.5`"}], FontColor -> 
      GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"1970", ",", "1", ",", "20"}], "}"}], ",", 
       RowBox[{"TimeObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"17", ",", "37", ",", "12.704`"}], "}"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}], ",", 
       RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.663829246093108*^9, 3.663829261242909*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateObject", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<1970/60000000\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Year\>\"", ",", " ", "\"\<Second\>\""}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.663829269522648*^9}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Tue 30 Dec 1969 12:00:57\"", 
     StyleBox[
      RowBox[{"\"GMT+\"", "\[InvisibleSpace]", "5.5`"}], FontColor -> 
      GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"1969", ",", "12", ",", "30"}], "}"}], ",", 
       RowBox[{"TimeObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"12", ",", "0", ",", "57.856`"}], "}"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}], ",", 
       RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.663829269974794*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Suggestion: FromUnixTime should support options like \
\[OpenCurlyDoubleQuote]DateFormat\[CloseCurlyDoubleQuote]\
\>", "Item",
 CellChangeTimes->{{3.663829059402227*^9, 3.6638290731294317`*^9}, {
  3.663829241418641*^9, 3.663829243457204*^9}, {3.663829332810946*^9, 
  3.663829335121386*^9}, {3.6638305618824577`*^9, 3.663830575521081*^9}}],

Cell["Suggestion: FromUnixTime and UnixTime are not invertible", "Item",
 CellChangeTimes->{{3.663829059402227*^9, 3.6638290731294317`*^9}, {
  3.663829241418641*^9, 3.663829243457204*^9}, {3.663829332810946*^9, 
  3.663829335121386*^9}, {3.6638305618824577`*^9, 3.663830575521081*^9}, {
  3.663831835634704*^9, 3.663831845217358*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"unixTime", "=", "1454840647.456"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"t", "=", 
  RowBox[{"FromUnixTime", "[", "unixTime", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"t", "[", "\"\<Millisecond\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.663831858945118*^9, 3.663831905037175*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sun 7 Feb 2016 15:54:07\"", 
     StyleBox[
      RowBox[{"\"GMT+\"", "\[InvisibleSpace]", "5.5`"}], FontColor -> 
      GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2016", ",", "2", ",", "7"}], "}"}], ",", 
       RowBox[{"TimeObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"15", ",", "54", ",", "7.456000328063965`"}], "}"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}], ",", 
       RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.663831860166779*^9, 3.6638319053229523`*^9}}],

Cell[BoxData["456"], "Output",
 CellChangeTimes->{{3.663831860166779*^9, 3.663831905333949*^9}}]
}, Open  ]],

Cell["Now getting the unix time doesn\[CloseCurlyQuote]t return the original \
time:", "Text",
 CellChangeTimes->{{3.663831934288844*^9, 3.663831946617344*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnixTime", "@", "t"}]], "Input",
 CellChangeTimes->{{3.663831887907148*^9, 3.663831889437958*^9}, 
   3.663831924978744*^9}],

Cell[BoxData["1454840647"], "Output",
 CellChangeTimes->{3.663831925309613*^9}]
}, Open  ]],

Cell["querying milliseconds is slow compared to getting seconds:", "Item",
 CellChangeTimes->{{3.663829059402227*^9, 3.6638290731294317`*^9}, {
  3.663829241418641*^9, 3.663829243457204*^9}, {3.663829332810946*^9, 
  3.663829335121386*^9}, {3.6638305618824577`*^9, 3.663830575521081*^9}, {
  3.663831835634704*^9, 3.663831845217358*^9}, {3.66383214581057*^9, 
  3.6638321547853603`*^9}, {3.6638322051065693`*^9, 3.663832220720934*^9}, {
  3.6638324017949142`*^9, 3.663832404577422*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "=", 
  RowBox[{"DateObject", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.663832157241197*^9, 3.663832160404269*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Sun 7 Feb 2016 16:39:20\"", 
     StyleBox[
      RowBox[{"\"GMT+\"", "\[InvisibleSpace]", "5.5`"}], FontColor -> 
      GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2016", ",", "2", ",", "7"}], "}"}], ",", 
       RowBox[{"TimeObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"16", ",", "39", ",", "20.665965`"}], "}"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}], ",", 
       RowBox[{"TimeZone", "\[Rule]", "5.5`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.6638321606775703`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "@", 
  RowBox[{"t", "[", "\"\<Millisecond\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.663832162372533*^9, 3.663832172585844*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00005614772727272726685369616528298309`2.", ",", "665"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.663832173317574*^9, 3.663832178137122*^9}, 
   3.663832407538102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "@", 
  RowBox[{"FractionalPart", "@", 
   RowBox[{"t", "[", "\"\<Second\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.663832184107071*^9, 3.6638321847136803`*^9}, {
  3.663832239177834*^9, 3.6638322431697073`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.87353515624999955081503993925551`2.*^-6", ",", "0.6659649999999999`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.663832184967112*^9, 3.6638322436344547`*^9, 
  3.6638324088098707`*^9}]
}, Open  ]],

Cell["Weird replace all behaviour with associations", "Item",
 CellChangeTimes->{{3.663832766258429*^9, 3.663832779745585*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "=", 
  RowBox[{"ReplaceAll", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<key\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<$symbol\>\"", "\[Rule]", " ", "\"\<Sin\>\""}], "}"}]}], 
     "|>"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Rule", "[", 
       RowBox[{"\"\<$symbol\>\"", ",", "x_"}], "]"}], "}"}], ":>", " ", 
     RowBox[{"ToExpression", "@", "x"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.663832814859661*^9, 3.6638328171615467`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"key\"\>", "\[Rule]", 
   RowBox[{"ToExpression", "[", "\<\"Sin\"\>", "]"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.663832781394109*^9, 3.663832817663377*^9, 
  3.663832947167163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "=", 
  RowBox[{"ReplaceAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<key\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<$symbol\>\"", "\[Rule]", " ", "\"\<Sin\>\""}], "}"}]}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Rule", "[", 
       RowBox[{"\"\<$symbol\>\"", ",", "x_"}], "]"}], "}"}], ":>", " ", 
     RowBox[{"ToExpression", "@", "x"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.663832787923024*^9, 3.6638328213870277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"key\"\>", "\[Rule]", "Sin"}], "}"}]], "Output",
 CellChangeTimes->{{3.663832799591658*^9, 3.663832821714014*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.663832252702272*^9, 3.6638322580254183`*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
InitializationCellEvaluation->False,
WindowSize->{1720, 1328},
WindowMargins->{{30, Automatic}, {Automatic, 268}},
Magnification:>2. Inherited,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 27, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info983665842172-2073150"->{
  Cell[67255, 1641, 1090, 15, 181, "Print",
   CellTags->"Info983665842172-2073150"]},
 "Info243665843238-5699381"->{
  Cell[72785, 1824, 542, 8, 148, "Print",
   CellTags->"Info243665843238-5699381"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info983665842172-2073150", 95667, 2479},
 {"Info243665843238-5699381", 95785, 2482}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 104, 1, 182, "Title"],
Cell[687, 25, 114, 3, 58, "Item"],
Cell[804, 30, 272, 7, 158, "Code"],
Cell[1079, 39, 250, 7, 90, "Item"],
Cell[CellGroupData[{
Cell[1354, 50, 434, 12, 158, "Code"],
Cell[1791, 64, 67, 1, 56, "Output"]
}, Open  ]],
Cell[1873, 68, 30, 0, 56, "Input"],
Cell[CellGroupData[{
Cell[1928, 72, 171, 2, 123, "Subchapter"],
Cell[CellGroupData[{
Cell[2124, 78, 42, 0, 87, "Subsection"],
Cell[2169, 80, 47, 0, 58, "Item"],
Cell[CellGroupData[{
Cell[2241, 84, 103, 2, 56, "Input"],
Cell[2347, 88, 127, 3, 70, "Output"]
}, Open  ]],
Cell[2489, 94, 129, 3, 58, "Item"],
Cell[CellGroupData[{
Cell[2643, 101, 369, 8, 123, "Input"],
Cell[3015, 111, 195, 5, 70, "Message"],
Cell[3213, 118, 34, 0, 70, "Output"],
Cell[3250, 120, 69, 1, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3368, 127, 41, 0, 67, "Subsection"],
Cell[3412, 129, 34, 0, 58, "Item"],
Cell[CellGroupData[{
Cell[3471, 133, 1781, 42, 255, "Input"],
Cell[5255, 177, 26511, 571, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31803, 753, 28, 0, 58, "Item"],
Cell[31834, 755, 377, 7, 113, "Subitem"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32248, 767, 109, 2, 56, "Input"],
Cell[32360, 771, 444, 9, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[32853, 786, 50, 0, 67, "Subsection"],
Cell[CellGroupData[{
Cell[32928, 790, 33, 0, 68, "Subsubsection"],
Cell[32964, 792, 51, 0, 58, "Item"],
Cell[CellGroupData[{
Cell[33040, 796, 77, 1, 56, "Input"],
Cell[33120, 799, 28, 0, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33185, 804, 105, 3, 58, "Item"],
Cell[33293, 809, 316, 7, 49, "Subitem"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33646, 821, 208, 5, 56, "Input"],
Cell[33857, 828, 28, 0, 78, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33934, 834, 32, 0, 68, "Subsubsection"],
Cell[33969, 836, 86, 2, 58, "Item"],
Cell[CellGroupData[{
Cell[34080, 842, 107, 2, 56, "Input"],
Cell[34190, 846, 1327, 38, 158, "Output"]
}, Open  ]],
Cell[35532, 887, 32, 0, 58, "Item"],
Cell[CellGroupData[{
Cell[35589, 891, 55, 1, 56, "Input"],
Cell[35647, 894, 933, 23, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36617, 922, 55, 1, 56, "Input"],
Cell[36675, 925, 789, 19, 178, "Output"]
}, Open  ]],
Cell[37479, 947, 52, 0, 58, "Item"],
Cell[CellGroupData[{
Cell[37556, 951, 55, 1, 56, "Input"],
Cell[37614, 954, 44, 0, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37695, 959, 100, 2, 58, "Item"],
Cell[37798, 963, 110, 3, 49, "Subitem"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37945, 971, 397, 10, 90, "Input"],
Cell[38345, 983, 26757, 578, 240, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65151, 1567, 38, 0, 68, "Subsubsection"],
Cell[65192, 1569, 293, 5, 124, "Item"],
Cell[CellGroupData[{
Cell[65510, 1578, 195, 4, 56, "Input"],
Cell[65708, 1584, 964, 22, 167, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[66733, 1613, 41, 0, 67, "Subsection"],
Cell[CellGroupData[{
Cell[66799, 1617, 41, 0, 68, "Subsubsection"],
Cell[CellGroupData[{
Cell[66865, 1621, 113, 3, 58, "Item"],
Cell[CellGroupData[{
Cell[67003, 1628, 96, 2, 49, "Subitem"],
Cell[67102, 1632, 42, 0, 49, "Subitem"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67193, 1638, 59, 1, 56, "Input"],
Cell[67255, 1641, 1090, 15, 181, "Print",
 CellTags->"Info983665842172-2073150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68382, 1661, 123, 3, 58, "Item"],
Cell[68508, 1666, 330, 10, 49, "Subitem"]
}, Open  ]],
Cell[68853, 1679, 600, 17, 123, "Input"],
Cell[CellGroupData[{
Cell[69478, 1700, 169, 4, 56, "Input"],
Cell[69650, 1706, 175, 6, 78, "Output"]
}, Open  ]],
Cell[69840, 1715, 141, 3, 58, "Item"],
Cell[69984, 1720, 292, 8, 90, "Input"],
Cell[CellGroupData[{
Cell[70301, 1732, 111, 2, 56, "Input"],
Cell[70415, 1736, 45, 1, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70497, 1742, 208, 4, 90, "Item"],
Cell[70708, 1748, 118, 3, 49, "Subitem"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70863, 1756, 77, 1, 56, "Input"],
Cell[70943, 1759, 28, 0, 78, "Output"]
}, Open  ]],
Cell[70986, 1762, 338, 10, 90, "Input"],
Cell[71327, 1774, 546, 13, 123, "Input"],
Cell[CellGroupData[{
Cell[71898, 1791, 138, 3, 56, "Input"],
Cell[72039, 1796, 412, 10, 78, "Output"]
}, Open  ]],
Cell[72466, 1809, 154, 3, 58, "Item"]
}, Closed]],
Cell[CellGroupData[{
Cell[72657, 1817, 41, 0, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[72723, 1821, 59, 1, 56, "Input"],
Cell[72785, 1824, 542, 8, 148, "Print",
 CellTags->"Info243665843238-5699381"]
}, Open  ]],
Cell[73342, 1835, 63, 0, 58, "Item"],
Cell[73408, 1837, 209, 5, 56, "Input"],
Cell[CellGroupData[{
Cell[73642, 1846, 50, 0, 58, "Item"],
Cell[73695, 1848, 35, 0, 49, "Subitem"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73767, 1853, 362, 7, 123, "Input"],
Cell[74132, 1862, 28, 0, 78, "Output"],
Cell[74163, 1864, 28, 0, 78, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[74230, 1869, 33, 0, 87, "Subsection"],
Cell[CellGroupData[{
Cell[74288, 1873, 39, 0, 67, "Subsection"],
Cell[74330, 1875, 304, 6, 98, "Text"],
Cell[74637, 1883, 88, 1, 58, "Item"],
Cell[74728, 1886, 241, 5, 56, "Input"],
Cell[74972, 1893, 91, 1, 58, "Item"],
Cell[75066, 1896, 202, 4, 56, "Input"],
Cell[75271, 1902, 88, 1, 58, "Item"],
Cell[75362, 1905, 205, 4, 56, "Input"],
Cell[75570, 1911, 190, 2, 58, "Item"],
Cell[75763, 1915, 215, 4, 56, "Input"],
Cell[75981, 1921, 104, 1, 58, "Item"],
Cell[76088, 1924, 215, 4, 56, "Input"],
Cell[76306, 1930, 155, 2, 58, "Item"],
Cell[76464, 1934, 285, 7, 56, "Input"],
Cell[76752, 1943, 121, 1, 60, "Text"],
Cell[CellGroupData[{
Cell[76898, 1948, 289, 7, 56, "Input"],
Cell[77190, 1957, 160, 2, 288, "Output"]
}, Open  ]],
Cell[77365, 1962, 156, 3, 60, "Text"],
Cell[77524, 1967, 284, 4, 58, "Item"],
Cell[77811, 1973, 719, 17, 85, "Input"],
Cell[78533, 1992, 283, 4, 58, "Item"],
Cell[78819, 1998, 236, 5, 56, "Input"],
Cell[79058, 2005, 441, 10, 60, "Text"],
Cell[CellGroupData[{
Cell[79524, 2019, 265, 7, 56, "Input"],
Cell[79792, 2028, 646, 15, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80475, 2048, 88, 2, 56, "Input"],
Cell[80566, 2052, 2695, 61, 176, "Output"]
}, Open  ]],
Cell[83276, 2116, 115, 1, 60, "Text"],
Cell[CellGroupData[{
Cell[83416, 2121, 234, 6, 56, "Input"],
Cell[83653, 2129, 2777, 66, 176, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86491, 2202, 118, 2, 123, "Subchapter"],
Cell[CellGroupData[{
Cell[86634, 2208, 94, 1, 87, "Subsection"],
Cell[86731, 2211, 147, 2, 58, "Item"],
Cell[CellGroupData[{
Cell[86903, 2217, 285, 7, 56, "Input"],
Cell[87191, 2226, 687, 16, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87915, 2247, 260, 7, 56, "Input"],
Cell[88178, 2256, 663, 16, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88878, 2277, 350, 6, 58, "Item"],
Cell[89231, 2285, 335, 4, 58, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89603, 2294, 324, 6, 123, "Input"],
Cell[89930, 2302, 698, 16, 79, "Output"],
Cell[90631, 2320, 96, 1, 56, "Output"]
}, Open  ]],
Cell[90742, 2324, 160, 2, 60, "Text"],
Cell[CellGroupData[{
Cell[90927, 2330, 148, 3, 56, "Input"],
Cell[91078, 2335, 79, 1, 56, "Output"]
}, Open  ]],
Cell[91172, 2339, 486, 6, 58, "Item"],
Cell[CellGroupData[{
Cell[91683, 2349, 147, 3, 56, "Input"],
Cell[91833, 2354, 666, 16, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92536, 2375, 174, 3, 56, "Input"],
Cell[92713, 2380, 212, 5, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92962, 2390, 259, 5, 56, "Input"],
Cell[93224, 2397, 230, 6, 66, "Output"]
}, Open  ]],
Cell[93469, 2406, 127, 1, 58, "Item"],
Cell[CellGroupData[{
Cell[93621, 2411, 520, 14, 90, "Input"],
Cell[94144, 2427, 266, 6, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94447, 2438, 518, 14, 56, "Input"],
Cell[94968, 2454, 157, 3, 56, "Output"]
}, Open  ]],
Cell[95140, 2460, 94, 1, 56, "Input"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

