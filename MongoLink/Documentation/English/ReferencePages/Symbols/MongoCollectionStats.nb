(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     93339,       2074]
NotebookOptionsPosition[     81373,       1830]
NotebookOutlinePosition[     82585,       1864]
CellTagsIndexPosition[     82505,       1859]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["11.3", "HistoryData",
  CellTags->"New",ExpressionUUID->"606cc6bb-dede-4cd0-9805-aa2e52e23320"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"bc0dc19b-466e-47c9-a539-4fba21eaa3d3"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"77945383-0a60-4179-b237-285a538bbe75"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"c0e8a2d4-afbf-403c-bd82-460d3d6b2471"]
}], "History",
 CellChangeTimes->{{3.714229782140036*^9, 3.714229782224633*^9}},
 CellID->341476719,ExpressionUUID->"09695cee-7c57-4560-b88a-31224a8b936a"],

Cell["Created by: sebastianb on 09-03-2017 00:52:43", "AuthorDate",
 CellID->929957821,ExpressionUUID->"bb7f5a0e-b909-4893-af08-b3a7556c21b7"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"8797dea1-45ab-40eb-8514-fc9d758ddf33"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"8761114a-839f-4271-aacc-7895dd88b349"],

Cell["MongoLink", "Categorization",
 CellChangeTimes->{3.713370199780055*^9},
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"7364db87-4df0-4926-a49b-825b5f98762e"],

Cell["MongoLink`", "Categorization",
 CellChangeTimes->{3.713370203069344*^9},
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"a67611bc-c111-446f-8e72-8adb73887b60"],

Cell["MongoLink/ref/MongoCollectionStats", "Categorization",
 CellChangeTimes->{{3.71337020830542*^9, 3.713370212098941*^9}, {
  3.7133816141788816`*^9, 3.7133816171538687`*^9}},
 CellLabel->"URI",
 CellID->882684644,ExpressionUUID->"fbbe74f8-43a9-4d08-8f0f-70a772c61a40"],

Cell["XXXX", "Categorization",
 CellLabel->"Title Modifier",
 CellID->172747495,ExpressionUUID->"a7b72039-89ec-4a7d-ace6-f151e5c5bba1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Synonyms", "SynonymsSection",
 CellID->1427418553,ExpressionUUID->"5517580a-dd75-494b-a0c3-631c32045b64"],

Cell["XXXX", "Synonyms",
 CellID->1251652828,ExpressionUUID->"e14387bc-101b-4662-8790-7c11f2d851a5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->477174294,ExpressionUUID->"5ae8e3e7-05f1-458b-859e-0098104face0"],

Cell["XXXX", "Keywords",
 CellID->1164421360,ExpressionUUID->"41c05580-51d3-42c6-acf5-8cf3dff0bcc5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1872225408,ExpressionUUID->"c8975ad8-7796-453f-b356-2f6ec136d095"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1562036412,ExpressionUUID->"7a6be6cd-5ba6-4d39-8878-6f921827c733"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->158391909,ExpressionUUID->"fa208b88-10cb-48c6-a60e-1d79650eff9d"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1360575930,ExpressionUUID->"05f1d0e1-e652-49ca-943f-c9d34c6b3d22"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->793782254,ExpressionUUID->"4f4dc36b-fcae-4bab-92a1-15af5099b550"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"8dba75e3-9387-4ca0-9523-764ab25b46f2"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->49458704,ExpressionUUID->"3939c578-57ed-403c-a6df-e01a7d47a0c6"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"12fdbec0-b51c-4ea2-8b1c-a0c1cf4acb3e"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->422270209,ExpressionUUID->"f2589827-63b7-40d0-9a4f-c1eae3f083ba"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->545239557,ExpressionUUID->"d365254a-0a5d-47b6-8280-70b86f7d2a50"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->121292707,ExpressionUUID->"a624cce3-bfdd-4d6f-86f7-66db0225795c"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->29314406,ExpressionUUID->"74122aa0-1825-44bb-a3d0-82e9f9ecf5f8"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->96001539,ExpressionUUID->"b757d17a-8dbf-4899-ac88-b9c9ac318c37"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->123278822,ExpressionUUID->"4a041336-b56e-4fa9-a8f5-bf682641028a"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"8daca241-419b-434e-9a3d-d9921111b356"]
}, Closed]],

Cell[CellGroupData[{

Cell["Security Details", "SecuritySection",
 CellID->13551076,ExpressionUUID->"12b2cee7-4a12-420a-9c96-0d2b80220652"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{CheckboxBox[
        Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "SecurityRisk"}, False]]],
       StyleBox[
       "\"   Potential security risk\"", FontFamily -> "Arial", FontSize -> 
        10, StripOnInput -> False]},
      "RowDefault"]},
    {
     DynamicBox[ToBoxes[
       If[
        TrueQ[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "SecurityRisk"}]], 
        InputField[
         Dynamic[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "SecurityExplanation"}, ""]], 
         String, FieldHint -> "How so? (optional)", FieldSize -> {40, 5}, 
         BaseStyle -> {FontFamily -> "Arial", FontSize -> 12}], ""], 
       StandardForm],
      ImageSizeCache->{0., {0., 5.}}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "SecurityDetails",
 CellID->2488900,ExpressionUUID->"1cd93454-3562-466f-b675-e5d9e7563a5d"]
}, Closed]],

Cell[CellGroupData[{

Cell["MongoCollectionStats", "ObjectName",
 CellChangeTimes->{3.713381636000679*^9},
 CellID->1224892054,ExpressionUUID->"067c281a-de74-4b27-84bd-366cdc067af9"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"0339b675-383f-4c8b-97e6-20c3a7112c08"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["MongoCollectionStats",
    BaseStyle->"Link",
    ButtonData->"paclet:MongoLink/ref/MongoCollectionStats"], "[", 
   RowBox[{
    ButtonBox["MongoCollection",
     BaseStyle->"Link",
     ButtonData->"paclet:MongoLink/ref/MongoCollection"], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}], "]"}]], "InlineFormula",
  ExpressionUUID->"2c9ebfcc-aaec-4b8c-b8bd-b34bbaddf600"],
 " \[LineSeparator]obtain a variety of statistics related to the ",
 Cell[BoxData[
  ButtonBox["MongoCollection",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollection"]], "InlineFormula",
  ExpressionUUID->"35da5711-55b0-4bae-b661-3b87be91cb75"],
 "."
}], "Usage",
 CellChangeTimes->{{3.7133816383193207`*^9, 3.7133816529420033`*^9}, {
  3.713382445277076*^9, 3.7133824812784967`*^9}, {3.714230966793998*^9, 
  3.7142309709607897`*^9}, {3.7150019839198637`*^9, 3.715001986178816*^9}, {
  3.7150020176031322`*^9, 3.715002017603244*^9}},
 CellID->982511436,ExpressionUUID->"28b1b5e1-76bf-43e0-be3a-d4372b2eb19e"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["MongoCollectionStats",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionStats"]], "InlineFormula",
  ExpressionUUID->"a5fd7a8b-e857-4058-a631-11dd943a1212"],
 " returns a ",
 Cell[BoxData[
  ButtonBox["Dataset",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "5c2038a3-1ea1-40c4-a526-89e51be722ba"],
 "."
}], "Notes",
 CellChangeTimes->{{3.713382485220433*^9, 3.713382514929021*^9}, {
  3.715002021043584*^9, 3.715002021043676*^9}},
 CellID->1067943069,ExpressionUUID->"21e16f68-38dc-4ac4-97c1-6c02144c5f12"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["MongoCollectionStats",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionStats"]], "InlineFormula",
  ExpressionUUID->"6ff35524-a319-4845-ac82-abbfe21a5f25"],
 " corresponds to ",
 ButtonBox["db.getCollectionInfos()",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://docs.mongodb.com/manual/reference/method/db.\
getCollectionInfos/"], None},
  ButtonNote->
   "https://docs.mongodb.com/manual/reference/method/db.getCollectionInfos/"],\

 " in the MongoDB documentation."
}], "Notes",
 CellChangeTimes->{{3.714222709589572*^9, 3.71422273913186*^9}, 
   3.715002022997698*^9},
 CellID->280614056,ExpressionUUID->"abf667c6-b041-48d3-b12b-5fd5f5d0950a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tutorials", "TutorialsSection",
 CellID->250839057,ExpressionUUID->"559b4e43-f7b8-4474-8aa1-8f1827d155a7"],

Cell[TextData[{
 StyleBox[ButtonBox["MongoLink ",
  BaseStyle->"Link",
  ButtonData->"paclet:MongoLink/tutorial/MongoLinkSimpleTutorial"],
  FontSlant->"Italic"],
 ButtonBox["Simple Tutorial",
  BaseStyle->"Link",
  ButtonData->"paclet:MongoLink/tutorial/MongoLinkSimpleTutorial"]
}], "Tutorials",
 CellChangeTimes->{3.714497010832203*^9, 3.7150019971670218`*^9},
 CellID->341631938,ExpressionUUID->"73e3d4a5-899f-4081-a41d-d0f2fbceae1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1268215905,ExpressionUUID->"8c7e753f-578f-413e-a219-191916f64b4a"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1129518860,ExpressionUUID->"8bb68709-a6a6-4b07-a20e-b2acee07822e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1584193535,ExpressionUUID->"6c01650f-465d-4a0b-ab3e-3a41ef6414d9"],

Cell["XXXX", "RelatedLinks",
 CellID->1038487239,ExpressionUUID->"8cf46d97-d6b4-4438-9f48-1648ba5d346b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1255426704,ExpressionUUID->"c8e8322b-684f-4ef6-bc5b-899254247373"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollection",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollection"]], \
"InlineFormula",ExpressionUUID->"d15a76dc-ace3-4746-b59f-ec0fcc0082cc"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.714496796257311*^9}, 
   3.714758915949094*^9},
 CellID->929782353,ExpressionUUID->"f1c60fcf-9a10-476f-a67f-1dd7e501e23d"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionAggregate",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionAggregate"]], \
"InlineFormula",ExpressionUUID->"cb7d6329-72bd-4927-82f7-8b89a30de0f6"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.7144968001213284`*^9}, {
   3.714496936926977*^9, 3.714496938461133*^9}, 3.7147589178374443`*^9},
 CellID->109084748,ExpressionUUID->"68f6f966-9204-4eeb-9865-cfab41ac3a98"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionCount",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionCount"]], \
"InlineFormula",ExpressionUUID->"e4dd97c6-b667-410e-a08d-e163a42e6c84"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.714496808648967*^9}, {
   3.714496942821047*^9, 3.714496943492867*^9}, 3.7147589194581137`*^9},
 CellID->1425764236,ExpressionUUID->"63816888-9dfc-48a6-a568-27c283f3bf38"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionDeleteMany",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionDeleteMany"]], \
"InlineFormula",ExpressionUUID->"1e93bd43-0eee-4ac6-9f49-e464750c7115"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.7144968162726*^9}, {
   3.7144969892372437`*^9, 3.714496990571336*^9}, 3.714758921051483*^9},
 CellID->1477338565,ExpressionUUID->"41bd10b1-3403-4671-8165-c8f6ce46404e"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionDeleteOne",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionDeleteOne"]], \
"InlineFormula",ExpressionUUID->"21260e28-3db8-49fc-a1d9-2e6c4c3d6fec"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.714496821975625*^9}, {
   3.71449702241189*^9, 3.714497025457996*^9}, 3.7147589225495996`*^9},
 CellID->1881008117,ExpressionUUID->"56910089-e379-41e0-a826-fcf9c1adec61"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionFind",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionFind"]], \
"InlineFormula",ExpressionUUID->"121e1c5b-d635-4828-8005-f94099383ca3"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.714496826872018*^9}, {
   3.714497051873638*^9, 3.7144970522092524`*^9}, 3.7147589241259527`*^9},
 CellID->1039810011,ExpressionUUID->"70a19cf6-700f-48d2-8b9d-1e8f582f3795"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionFindOne",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionFindOne"]], \
"InlineFormula",ExpressionUUID->"17d24367-6228-4548-951d-39b8426b5019"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.71449683307207*^9}, {
   3.7144970778742*^9, 3.71449708247209*^9}, 3.714758925679858*^9},
 CellID->1562412619,ExpressionUUID->"cafce05f-375f-4886-a75f-a57ccb226b9d"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionInsert",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionInsert"]], \
"InlineFormula",ExpressionUUID->"28c41cfc-88c6-4f06-9e57-553685212e2a"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.7144968427117*^9}, {
   3.714497325873981*^9, 3.714497327016081*^9}, 3.714758927549818*^9},
 CellID->1593735175,ExpressionUUID->"b484442a-bb16-4fc4-8c21-0ed4e5a696d1"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionName",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionName"]], \
"InlineFormula",ExpressionUUID->"75d9a3ae-86c9-4cae-ab84-11938775e1bb"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.7144968524552927`*^9}, {
   3.71449733738545*^9, 3.714497337751625*^9}, 3.714758929281465*^9},
 CellID->1973708859,ExpressionUUID->"db37dc3b-cd1c-48ef-b86d-477f33d07ba9"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionReplaceOne",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionReplaceOne"]], \
"InlineFormula",ExpressionUUID->"2982e322-3494-40d9-b546-4d70420ac702"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.7144968577986803`*^9}, {
   3.7144973683925657`*^9, 3.714497370437686*^9}, 3.714758930937448*^9},
 CellID->414311596,ExpressionUUID->"8c7caa0f-0f78-44c4-bccd-02b082f205ec"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionUpdateMany",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionUpdateMany"]], \
"InlineFormula",ExpressionUUID->"afec50e7-c585-4524-ad49-d02b2477e7b6"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.714496864452794*^9}, 
   3.7147589326488533`*^9},
 CellID->1951493320,ExpressionUUID->"8494be4c-7355-4d5c-9527-014923c7ccff"],

Cell[TextData[Cell[BoxData[
 ButtonBox["MongoCollectionUpdateOne",
  BaseStyle->"Link",
  ButtonData->
   "paclet:MongoLink/ref/MongoCollectionUpdateOne"]], \
"InlineFormula",ExpressionUUID->"79d87a7a-3c13-4ec3-a55b-68b4c36eae28"]], \
"SeeAlso",
 CellChangeTimes->{{3.7144967837961206`*^9, 3.7144968703114*^9}, 
   3.714758934764634*^9},
 CellID->1626547747,ExpressionUUID->"90ce3d2c-82b8-42cb-95c2-24677d8f0554"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "MoreAboutSection",
 CellID->38303248,ExpressionUUID->"57af1b8f-f288-42b1-a07a-5352578cdc88"],

Cell["Autogenerated", "MoreAbout",
 CellID->1665078683,ExpressionUUID->"d27772fe-bef2-4463-ba2f-a749ca955fdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->880084151,ExpressionUUID->"738df489-4595-4044-b42d-b0ba38096787"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1b772bd4-7f5e-4e3e-bf07-34575ec32f0f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->354573589,ExpressionUUID->"d884027b-08a9-4663-96c9-da6ab958c99e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MongoLink`\>\"", "]"}]], "Input",
 CellID->1197403608,ExpressionUUID->"881536f2-1860-4737-896d-e595dc264efc"],

Cell["Open a MongoDB connection:", "ExampleText",
 CellChangeTimes->{{3.713382107550941*^9, 3.7133821199787903`*^9}},
 CellID->19048904,ExpressionUUID->"7237aa03-11c5-42ac-96c2-14c7b1e7d823"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"client", "=", 
  RowBox[{"OpenMongoConnection", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.71338170551399*^9, 3.7133817303744392`*^9}},
 CellLabel->"In[4]:=",
 CellID->165881856,ExpressionUUID->"cd5a536a-8e55-4cb3-a69f-bd9eb5c1d651"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["MongoClient",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  MongoLink`MongoClient[
   MongoLink`PackageScope`clientMLE[1]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.713381712235888*^9, 3.713381741988132*^9}},
 CellLabel->"Out[4]=",
 CellID->2127965559,ExpressionUUID->"37fc3d0d-f2d4-40c2-85a9-cea72f514807"]
}, Open  ]],

Cell["\<\
Connect to the \"NewCollection\" collection in the \"WolframTestDB\" database:\
\>", "ExampleText",
 CellChangeTimes->{{3.713382125810454*^9, 3.713382181521886*^9}},
 CellID->774817758,ExpressionUUID->"5234ba06-518a-4bfe-8639-48e3018fb79e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coll", "=", 
  RowBox[{
   RowBox[{"client", "[", "\"\<WolframTestDB\>\"", "]"}], "[", 
   "\"\<NewCollection\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.713381938423278*^9, 3.713381988534142*^9}},
 CellLabel->"In[11]:=",
 CellID->1794352644,ExpressionUUID->"504a6ae4-8444-4b54-8e1e-9c0dd76a81dd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["MongoCollection",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NewCollection\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Database: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"WolframTestDB\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NewCollection\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Database: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"WolframTestDB\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  MongoLink`MongoCollection[
   MongoLink`PackageScope`collectionMLE[3], "WolframTestDB", "NewCollection", 
   
   MongoLink`MongoClient[
    MongoLink`PackageScope`clientMLE[1]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7133819604397907`*^9, 3.7133819888318987`*^9}},
 CellLabel->"Out[11]=",
 CellID->383428764,ExpressionUUID->"3a7d6a42-d28d-4f11-a9c1-a51abd33c9ea"]
}, Open  ]],

Cell["Obtain a variety of statistics related to the collection:", \
"ExampleText",
 CellChangeTimes->{{3.713382125810454*^9, 3.713382181521886*^9}, {
  3.71338231663693*^9, 3.713382339994821*^9}},
 CellID->1716840566,ExpressionUUID->"16a70b55-6e5b-4802-86e6-8761857302df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"MongoCollectionStats", "[", "coll", "]"}]}]], "Input",
 CellChangeTimes->{{3.7133818185481052`*^9, 3.7133818237061243`*^9}, {
  3.713382038688705*^9, 3.713382039045965*^9}},
 CellLabel->"In[13]:=",
 CellID->1596581364,ExpressionUUID->"506df449-9401-4e10-a5b4-3fb4ce228ebe"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 12, "InitialType" -> 
        TypeSystem`Struct[{
          "ns", "size", "count", "avgObjSize", "storageSize", "capped", 
           "wiredTiger", "nindexes", "indexDetails", "totalIndexSize", 
           "indexSizes", "ok"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[TypeSystem`Boolean], 
           
           TypeSystem`Struct[{
            "metadata", "creationString", "type", "uri", "LSM", 
             "block-manager", "btree", "cache", "cache_walk", "compression", 
             "cursor", "reconciliation", "session", "transaction"}, {
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "bloom filter false positives", "bloom filter hits", 
                "bloom filter misses", 
                "bloom filter pages evicted from cache", 
                "bloom filter pages read into cache", 
                "bloom filters in the LSM tree", "chunks in the LSM tree", 
                "highest merge generation in the LSM tree", 
                "queries that could have benefited from a Bloom filter that \
did not exist", "sleep for LSM checkpoint throttle", 
                "sleep for LSM merge throttle", 
                "total size of bloom filters"]], 
              TypeSystem`Atom[Integer], 12], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "allocations requiring file extension", "blocks allocated", 
                "blocks freed", "checkpoint size", 
                "file allocation unit size", "file bytes available for reuse",
                 "file magic number", "file major version number", 
                "file size in bytes", "minor version number"]], 
              TypeSystem`Atom[Integer], 10], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 18], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 23], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 18], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "compressed pages read", "compressed pages written", 
                "page written failed to compress", 
                "page written was too small to compress", 
                "raw compression call failed, additional data available", 
                "raw compression call failed, no additional data available", 
                "raw compression call succeeded"]], 
              TypeSystem`Atom[Integer], 7], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "bulk-loaded cursor-insert calls", "create calls", 
                "cursor-insert key and value bytes inserted", 
                "cursor-remove key bytes removed", 
                "cursor-update value bytes updated", "insert calls", 
                "next calls", "prev calls", "remove calls", "reset calls", 
                "restarted searches", "search calls", "search near calls", 
                "truncate calls", "update calls"]], 
              TypeSystem`Atom[Integer], 15], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "dictionary matches", "fast-path pages deleted", 
                "internal page key bytes discarded using suffix compression", 
                "internal page multi-block writes", 
                "internal-page overflow keys", 
                "leaf page key bytes discarded using prefix compression", 
                "leaf page multi-block writes", "leaf-page overflow keys", 
                "maximum blocks required for a page", 
                "overflow values written", "page checksum matches", 
                "page reconciliation calls", 
                "page reconciliation calls for eviction", "pages deleted"]], 
              TypeSystem`Atom[Integer], 14], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "object compaction", "open cursor count"]], 
              TypeSystem`Atom[Integer], 2], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 1]}], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            
            TypeSystem`Struct[{
             "metadata", "creationString", "type", "uri", "LSM", 
              "block-manager", "btree", "cache", "cache_walk", "compression", 
              "cursor", "reconciliation", "session", "transaction"}, {
              TypeSystem`Struct[{"formatVersion", "infoObj"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[String]}], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "bloom filter false positives", "bloom filter hits", 
                 "bloom filter misses", 
                 "bloom filter pages evicted from cache", 
                 "bloom filter pages read into cache", 
                 "bloom filters in the LSM tree", "chunks in the LSM tree", 
                 "highest merge generation in the LSM tree", 
                 "queries that could have benefited from a Bloom filter that \
did not exist", "sleep for LSM checkpoint throttle", 
                 "sleep for LSM merge throttle", 
                 "total size of bloom filters"]], 
               TypeSystem`Atom[Integer], 12], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "allocations requiring file extension", "blocks allocated", 
                 "blocks freed", "checkpoint size", 
                 "file allocation unit size", 
                 "file bytes available for reuse", "file magic number", 
                 "file major version number", "file size in bytes", 
                 "minor version number"]], 
               TypeSystem`Atom[Integer], 10], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 18], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 23], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 18], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "compressed pages read", "compressed pages written", 
                 "page written failed to compress", 
                 "page written was too small to compress", 
                 "raw compression call failed, additional data available", 
                 "raw compression call failed, no additional data available", 
                 "raw compression call succeeded"]], 
               TypeSystem`Atom[Integer], 7], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "bulk-loaded cursor-insert calls", "create calls", 
                 "cursor-insert key and value bytes inserted", 
                 "cursor-remove key bytes removed", 
                 "cursor-update value bytes updated", "insert calls", 
                 "next calls", "prev calls", "remove calls", "reset calls", 
                 "restarted searches", "search calls", "search near calls", 
                 "truncate calls", "update calls"]], 
               TypeSystem`Atom[Integer], 15], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "dictionary matches", "fast-path pages deleted", 
                 "internal page key bytes discarded using suffix compression",
                  "internal page multi-block writes", 
                 "internal-page overflow keys", 
                 "leaf page key bytes discarded using prefix compression", 
                 "leaf page multi-block writes", "leaf-page overflow keys", 
                 "maximum blocks required for a page", 
                 "overflow values written", "page checksum matches", 
                 "page reconciliation calls", 
                 "page reconciliation calls for eviction", "pages deleted"]], 
               
               TypeSystem`Atom[Integer], 14], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "object compaction", "open cursor count"]], 
               TypeSystem`Atom[Integer], 2], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 1]}], 1], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer], 1], 
           TypeSystem`Atom[Real]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"ns"} -> 
           TypeSystem`PackageScope`AtomShape[259.20000000000005`], {"size"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"count"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"avgObjSize"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"storageSize"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"capped"} -> 
           TypeSystem`PackageScope`AtomShape[36], {"wiredTiger"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"nindexes"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"indexDetails"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"totalIndexSize"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"indexSizes"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"ok"} -> 
           TypeSystem`PackageScope`AtomShape[60]], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[721037982], "Type" -> 
        TypeSystem`Struct[{
          "ns", "size", "count", "avgObjSize", "storageSize", "capped", 
           "wiredTiger", "nindexes", "indexDetails", "totalIndexSize", 
           "indexSizes", "ok"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[TypeSystem`Boolean], 
           TypeSystem`Struct[{
            "metadata", "creationString", "type", "uri", "LSM", 
             "block-manager", "btree", "cache", "cache_walk", "compression", 
             "cursor", "reconciliation", "session", "transaction"}, {
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "bloom filter false positives", "bloom filter hits", 
                "bloom filter misses", 
                "bloom filter pages evicted from cache", 
                "bloom filter pages read into cache", 
                "bloom filters in the LSM tree", "chunks in the LSM tree", 
                "highest merge generation in the LSM tree", 
                "queries that could have benefited from a Bloom filter that \
did not exist", "sleep for LSM checkpoint throttle", 
                "sleep for LSM merge throttle", 
                "total size of bloom filters"]], 
              TypeSystem`Atom[Integer], 12], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "allocations requiring file extension", "blocks allocated", 
                "blocks freed", "checkpoint size", 
                "file allocation unit size", "file bytes available for reuse",
                 "file magic number", "file major version number", 
                "file size in bytes", "minor version number"]], 
              TypeSystem`Atom[Integer], 10], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 18], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 23], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 18], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "compressed pages read", "compressed pages written", 
                "page written failed to compress", 
                "page written was too small to compress", 
                "raw compression call failed, additional data available", 
                "raw compression call failed, no additional data available", 
                "raw compression call succeeded"]], 
              TypeSystem`Atom[Integer], 7], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "bulk-loaded cursor-insert calls", "create calls", 
                "cursor-insert key and value bytes inserted", 
                "cursor-remove key bytes removed", 
                "cursor-update value bytes updated", "insert calls", 
                "next calls", "prev calls", "remove calls", "reset calls", 
                "restarted searches", "search calls", "search near calls", 
                "truncate calls", "update calls"]], 
              TypeSystem`Atom[Integer], 15], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "dictionary matches", "fast-path pages deleted", 
                "internal page key bytes discarded using suffix compression", 
                "internal page multi-block writes", 
                "internal-page overflow keys", 
                "leaf page key bytes discarded using prefix compression", 
                "leaf page multi-block writes", "leaf-page overflow keys", 
                "maximum blocks required for a page", 
                "overflow values written", "page checksum matches", 
                "page reconciliation calls", 
                "page reconciliation calls for eviction", "pages deleted"]], 
              TypeSystem`Atom[Integer], 14], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "object compaction", "open cursor count"]], 
              TypeSystem`Atom[Integer], 2], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 1]}], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{
             "metadata", "creationString", "type", "uri", "LSM", 
              "block-manager", "btree", "cache", "cache_walk", "compression", 
              "cursor", "reconciliation", "session", "transaction"}, {
              TypeSystem`Struct[{"formatVersion", "infoObj"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[String]}], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "bloom filter false positives", "bloom filter hits", 
                 "bloom filter misses", 
                 "bloom filter pages evicted from cache", 
                 "bloom filter pages read into cache", 
                 "bloom filters in the LSM tree", "chunks in the LSM tree", 
                 "highest merge generation in the LSM tree", 
                 "queries that could have benefited from a Bloom filter that \
did not exist", "sleep for LSM checkpoint throttle", 
                 "sleep for LSM merge throttle", 
                 "total size of bloom filters"]], 
               TypeSystem`Atom[Integer], 12], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "allocations requiring file extension", "blocks allocated", 
                 "blocks freed", "checkpoint size", 
                 "file allocation unit size", 
                 "file bytes available for reuse", "file magic number", 
                 "file major version number", "file size in bytes", 
                 "minor version number"]], 
               TypeSystem`Atom[Integer], 10], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 18], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 23], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 18], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "compressed pages read", "compressed pages written", 
                 "page written failed to compress", 
                 "page written was too small to compress", 
                 "raw compression call failed, additional data available", 
                 "raw compression call failed, no additional data available", 
                 "raw compression call succeeded"]], 
               TypeSystem`Atom[Integer], 7], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "bulk-loaded cursor-insert calls", "create calls", 
                 "cursor-insert key and value bytes inserted", 
                 "cursor-remove key bytes removed", 
                 "cursor-update value bytes updated", "insert calls", 
                 "next calls", "prev calls", "remove calls", "reset calls", 
                 "restarted searches", "search calls", "search near calls", 
                 "truncate calls", "update calls"]], 
               TypeSystem`Atom[Integer], 15], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "dictionary matches", "fast-path pages deleted", 
                 "internal page key bytes discarded using suffix compression",
                  "internal page multi-block writes", 
                 "internal-page overflow keys", 
                 "leaf page key bytes discarded using prefix compression", 
                 "leaf page multi-block writes", "leaf-page overflow keys", 
                 "maximum blocks required for a page", 
                 "overflow values written", "page checksum matches", 
                 "page reconciliation calls", 
                 "page reconciliation calls for eviction", "pages deleted"]], 
               
               TypeSystem`Atom[Integer], 14], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "object compaction", "open cursor count"]], 
               TypeSystem`Atom[Integer], 2], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 1]}], 1], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer], 1], 
           TypeSystem`Atom[Real]}], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[721037982]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ns\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ns\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["ns"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["ns"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["WolframTestDB.NewCollection", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["ns"]]], "Mouse"], 
                ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"size\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"size\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["size"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["size"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1196"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["size"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"count\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"count\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["count"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["count"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"avgObjSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"avgObjSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["avgObjSize"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["avgObjSize"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["199"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["avgObjSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"storageSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"storageSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["storageSize"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["storageSize"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32768"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["storageSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"capped\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"capped\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["capped"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["capped"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["capped"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"wiredTiger\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"wiredTiger\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["wiredTiger"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["wiredTiger"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 14], "\[RightAssociation]"}], 
                    Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 14], "\[RightAssociation]"}], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["wiredTiger"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["wiredTiger"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"nindexes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"nindexes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["nindexes"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["nindexes"]]], "Mouse"], Background -> GrayLevel[0.95],
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["nindexes"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"indexDetails\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"indexDetails\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["indexDetails"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["indexDetails"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"_id_"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"_id_"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["indexDetails"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["indexDetails"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"totalIndexSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"totalIndexSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["totalIndexSize"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["totalIndexSize"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32768"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["totalIndexSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"indexSizes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"indexSizes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["indexSizes"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["indexSizes"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association["_id_" -> 32768], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association["_id_" -> 32768], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["indexSizes"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["indexSizes"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ok\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ok\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][{
                    Key["ok"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["ok"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
                  GeneralUtilities`Slice[
                   Key["ok"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1146708250]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1146708250][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {367., {153.8544921875, 159.1455078125}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.713381824038619*^9, 3.713382000467977*^9, 
  3.7133820395107317`*^9},
 CellLabel->"Out[13]=",
 CellID->1709608062,ExpressionUUID->"e5c8bd8f-3e54-4775-997a-05eb8592f127"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1854448968,ExpressionUUID->"b2dcf50c-23c4-4dca-a033-abcd0a4e997a"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "a83902d9-b54c-40dd-85ff-26cbd9194ca7"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1293636265,ExpressionUUID->"7e7328ef-5126-4c4a-b67f-c3bcaee1666e"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "7b2d3257-45ae-4d4e-abf3-6cf0bb0df158"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1020263627,ExpressionUUID->"c31e5c51-156c-4dad-a3b5-fc67d2544c91"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "0e2e07cc-11c5-40f1-86e0-2e8dd09a6325"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2061341341,ExpressionUUID->"e3ee5364-c4db-4848-9fb5-4da8dfe88071"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "245f0389-4c1c-4087-81a0-ccbdb5baa6fc"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1757724783,ExpressionUUID->"8c99a826-b900-4868-ab08-86839b2f8da7"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "e24605c3-e3e9-4eea-92e3-f3cecff41ec7"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1295379749,ExpressionUUID->"68a8cf43-6c4b-44c2-9538-f2cabbcb5922"]
}, Closed]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "0af49378-c883-4449-afed-11bc3ad9cc22"],
  $Line = 0; Null]], "ExampleSection",
 CellID->258228157,ExpressionUUID->"e8dac25c-049e-4894-b0b9-5f8c9d45dc77"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "6cb531af-2981-49f5-af3c-7506d5e2b756"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759,ExpressionUUID->"9af0e973-9c43-480f-8bd5-8d68376d1385"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "92b9ae23-7aa1-4ce3-a2d3-e8591a053b91"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373,ExpressionUUID->"8b233114-bce2-458e-b88a-2cab623952db"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "ae26c962-c4b8-40eb-9662-b53b963a2955"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1653164318,ExpressionUUID->"4a9d253e-b58d-4124-8301-2f39fa5c87c3"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "c5997200-f1d2-4628-8506-20e4dc21f09f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740,ExpressionUUID->"a7d18140-9722-43d4-9654-6399ce3ccf65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Design Discussion", "DesignDiscussionSection",
 CellID->1775809863,ExpressionUUID->"10f08874-be4a-4a15-9982-a6d0a24b3ae8"],

Cell["XXXX", "DesignDiscussion",
 CellID->308641435,ExpressionUUID->"e3d50c05-e502-4f7e-8f12-3687c14692fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application Notes", "ApplicationNotesSection",
 CellID->1163590540,ExpressionUUID->"128f3346-cccd-49f5-afdd-a6a25f0d5f05"],

Cell["XXXX", "ApplicationNotes",
 CellID->1480116198,ExpressionUUID->"e21795e9-285b-4d10-b006-7c4a7484043b"]
}, Open  ]],

Cell["Test Cases", "TestCasesSection",
 CellID->725748110,ExpressionUUID->"1d4e89c2-15d7-4d50-ae54-667a85a4dcf2"],

Cell[CellGroupData[{

Cell["Function Essay", "FunctionEssaySection",
 CellID->37427227,ExpressionUUID->"f92da85e-fc7b-493b-966f-88c0baa96be0"],

Cell["XXXX", "FunctionEssay",
 CellID->356990964,ExpressionUUID->"1d72d4df-5e15-4ef7-b41c-f1b84bd2c5a0"]
}, Open  ]]
},
ScreenStyleEnvironment->"ExperimentalObject",
WindowSize->{808, 668},
WindowMargins->{{-1280, Automatic}, {Automatic, -34}},
TaggingRules->{
 "DocuToolsSettingsInternal" -> {
   "$PacletVersion" -> "0.9.1871", "$MVersion" -> "11", "$FlaggedVersion" -> 
    10.4, "$ApplicationName" -> "Pubs", "$LinkBase" -> "Pubs", 
    "$ApplicationDirectory" -> "C:\\Workspace\\Pubs\\", 
    "$DocumentationDirectory" -> 
    "C:\\Workspace\\Pubs\\Documentation\\English\\", "$UseNewPageDialog" -> 
    ""}, "SecurityRisk" -> False, "SecurityExplanation" -> "", "Author" -> 
  "sebastianb", "CreationDate" -> "09-03-2017 00:52:43"},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
20, 2017)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStyles.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[77697, 1722, 155, 2, 70, "ExtendedExamplesSection",ExpressionUUID->"b2dcf50c-23c4-4dca-a033-abcd0a4e997a",
   CellTags->"ExtendedExamples",
   CellID->1854448968]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 82310, 1852}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 666, 15, 24, "History",ExpressionUUID->"09695cee-7c57-4560-b88a-31224a8b936a",
 CellID->341476719],
Cell[1227, 37, 142, 1, 20, "AuthorDate",ExpressionUUID->"bb7f5a0e-b909-4893-af08-b3a7556c21b7",
 CellID->929957821],
Cell[CellGroupData[{
Cell[1394, 42, 123, 1, 29, "CategorizationSection",ExpressionUUID->"8797dea1-45ab-40eb-8514-fc9d758ddf33",
 CellID->1122911449],
Cell[1520, 45, 134, 2, 30, "Categorization",ExpressionUUID->"8761114a-839f-4271-aacc-7895dd88b349",
 CellID->686433507],
Cell[1657, 49, 179, 3, 30, "Categorization",ExpressionUUID->"7364db87-4df0-4926-a49b-825b5f98762e",
 CellID->605800465],
Cell[1839, 54, 176, 3, 30, "Categorization",ExpressionUUID->"a67611bc-c111-446f-8e72-8adb73887b60",
 CellID->468444828],
Cell[2018, 59, 272, 4, 30, "Categorization",ExpressionUUID->"fbbe74f8-43a9-4d08-8f0f-70a772c61a40",
 CellID->882684644],
Cell[2293, 65, 135, 2, 30, "Categorization",ExpressionUUID->"a7b72039-89ec-4a7d-ace6-f151e5c5bba1",
 CellID->172747495]
}, Open  ]],
Cell[CellGroupData[{
Cell[2465, 72, 111, 1, 29, "SynonymsSection",ExpressionUUID->"5517580a-dd75-494b-a0c3-631c32045b64",
 CellID->1427418553],
Cell[2579, 75, 100, 1, 70, "Synonyms",ExpressionUUID->"e14387bc-101b-4662-8790-7c11f2d851a5",
 CellID->1251652828]
}, Closed]],
Cell[CellGroupData[{
Cell[2716, 81, 110, 1, 19, "KeywordsSection",ExpressionUUID->"5ae8e3e7-05f1-458b-859e-0098104face0",
 CellID->477174294],
Cell[2829, 84, 100, 1, 70, "Keywords",ExpressionUUID->"41c05580-51d3-42c6-acf5-8cf3dff0bcc5",
 CellID->1164421360]
}, Closed]],
Cell[CellGroupData[{
Cell[2966, 90, 120, 1, 19, "TemplatesSection",ExpressionUUID->"c8975ad8-7796-453f-b356-2f6ec136d095",
 CellID->1872225408],
Cell[3089, 93, 149, 2, 70, "Template",ExpressionUUID->"7a6be6cd-5ba6-4d39-8878-6f921827c733",
 CellID->1562036412],
Cell[3241, 97, 137, 2, 70, "Template",ExpressionUUID->"fa208b88-10cb-48c6-a60e-1d79650eff9d",
 CellID->158391909],
Cell[3381, 101, 136, 2, 70, "Template",ExpressionUUID->"05f1d0e1-e652-49ca-943f-c9d34c6b3d22",
 CellID->1360575930],
Cell[3520, 105, 137, 2, 70, "Template",ExpressionUUID->"4f4dc36b-fcae-4bab-92a1-15af5099b550",
 CellID->793782254]
}, Closed]],
Cell[CellGroupData[{
Cell[3694, 112, 108, 1, 19, "DetailsSection",ExpressionUUID->"8dba75e3-9387-4ca0-9523-764ab25b46f2",
 CellID->307771771],
Cell[3805, 115, 117, 2, 70, "Details",ExpressionUUID->"3939c578-57ed-403c-a6df-e01a7d47a0c6",
 CellID->49458704],
Cell[3925, 119, 124, 2, 70, "Details",ExpressionUUID->"12fdbec0-b51c-4ea2-8b1c-a0c1cf4acb3e",
 CellID->350963985],
Cell[4052, 123, 121, 2, 70, "Details",ExpressionUUID->"f2589827-63b7-40d0-9a4f-c1eae3f083ba",
 CellID->422270209],
Cell[4176, 127, 126, 2, 70, "Details",ExpressionUUID->"d365254a-0a5d-47b6-8280-70b86f7d2a50",
 CellID->545239557],
Cell[4305, 131, 116, 2, 70, "Details",ExpressionUUID->"a624cce3-bfdd-4d6f-86f7-66db0225795c",
 CellID->121292707],
Cell[4424, 135, 115, 2, 70, "Details",ExpressionUUID->"74122aa0-1825-44bb-a3d0-82e9f9ecf5f8",
 CellID->29314406],
Cell[4542, 139, 117, 2, 70, "Details",ExpressionUUID->"b757d17a-8dbf-4899-ac88-b9c9ac318c37",
 CellID->96001539],
Cell[4662, 143, 133, 2, 70, "Details",ExpressionUUID->"4a041336-b56e-4fa9-a8f5-bf682641028a",
 CellID->123278822],
Cell[4798, 147, 122, 2, 70, "Details",ExpressionUUID->"8daca241-419b-434e-9a3d-d9921111b356",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4957, 154, 117, 1, 19, "SecuritySection",ExpressionUUID->"12b2cee7-4a12-420a-9c96-0d2b80220652",
 CellID->13551076],
Cell[5077, 157, 1094, 30, 70, "SecurityDetails",ExpressionUUID->"1cd93454-3562-466f-b675-e5d9e7563a5d",
 CellID->2488900]
}, Closed]],
Cell[CellGroupData[{
Cell[6208, 192, 160, 2, 63, "ObjectName",ExpressionUUID->"067c281a-de74-4b27-84bd-366cdc067af9",
 CellID->1224892054],
Cell[6371, 196, 1141, 25, 81, "Usage",ExpressionUUID->"28b1b5e1-76bf-43e0-be3a-d4372b2eb19e",
 CellID->982511436],
Cell[7515, 223, 589, 15, 28, "Notes",ExpressionUUID->"21e16f68-38dc-4ac4-97c1-6c02144c5f12",
 CellID->1067943069],
Cell[8107, 240, 729, 19, 28, "Notes",ExpressionUUID->"abf667c6-b041-48d3-b12b-5fd5f5d0950a",
 CellID->280614056]
}, Open  ]],
Cell[CellGroupData[{
Cell[8873, 264, 112, 1, 44, "TutorialsSection",ExpressionUUID->"559b4e43-f7b8-4474-8aa1-8f1827d155a7",
 CellID->250839057],
Cell[8988, 267, 438, 10, 16, "Tutorials",ExpressionUUID->"73e3d4a5-899f-4081-a41d-d0f2fbceae1d",
 CellID->341631938]
}, Open  ]],
Cell[CellGroupData[{
Cell[9463, 282, 138, 1, 31, "RelatedDemonstrationsSection",ExpressionUUID->"8c7e753f-578f-413e-a219-191916f64b4a",
 CellID->1268215905],
Cell[9604, 285, 113, 1, 16, "RelatedDemonstrations",ExpressionUUID->"8bb68709-a6a6-4b07-a20e-b2acee07822e",
 CellID->1129518860]
}, Open  ]],
Cell[CellGroupData[{
Cell[9754, 291, 120, 1, 31, "RelatedLinksSection",ExpressionUUID->"6c01650f-465d-4a0b-ab3e-3a41ef6414d9",
 CellID->1584193535],
Cell[9877, 294, 104, 1, 16, "RelatedLinks",ExpressionUUID->"8cf46d97-d6b4-4438-9f48-1648ba5d346b",
 CellID->1038487239]
}, Open  ]],
Cell[CellGroupData[{
Cell[10018, 300, 110, 1, 31, "SeeAlsoSection",ExpressionUUID->"c8e8322b-684f-4ef6-bc5b-899254247373",
 CellID->1255426704],
Cell[10131, 303, 396, 9, 22, "SeeAlso",ExpressionUUID->"f1c60fcf-9a10-476f-a67f-1dd7e501e23d",
 CellID->929782353],
Cell[10530, 314, 464, 9, 22, "SeeAlso",ExpressionUUID->"68f6f966-9204-4eeb-9865-cfab41ac3a98",
 CellID->109084748],
Cell[10997, 325, 455, 9, 22, "SeeAlso",ExpressionUUID->"63816888-9dfc-48a6-a568-27c283f3bf38",
 CellID->1425764236],
Cell[11455, 336, 463, 9, 22, "SeeAlso",ExpressionUUID->"41bd10b1-3403-4671-8165-c8f6ce46404e",
 CellID->1477338565],
Cell[11921, 347, 462, 9, 22, "SeeAlso",ExpressionUUID->"56910089-e379-41e0-a826-fcf9c1adec61",
 CellID->1881008117],
Cell[12386, 358, 455, 9, 22, "SeeAlso",ExpressionUUID->"70a19cf6-700f-48d2-8b9d-1e8f582f3795",
 CellID->1039810011],
Cell[12844, 369, 453, 9, 22, "SeeAlso",ExpressionUUID->"cafce05f-375f-4886-a75f-a57ccb226b9d",
 CellID->1562412619],
Cell[13300, 380, 453, 9, 22, "SeeAlso",ExpressionUUID->"b484442a-bb16-4fc4-8c21-0ed4e5a696d1",
 CellID->1593735175],
Cell[13756, 391, 452, 9, 22, "SeeAlso",ExpressionUUID->"db37dc3b-cd1c-48ef-b86d-477f33d07ba9",
 CellID->1973708859],
Cell[14211, 402, 466, 9, 22, "SeeAlso",ExpressionUUID->"8c7caa0f-0f78-44c4-bccd-02b082f205ec",
 CellID->414311596],
Cell[14680, 413, 419, 9, 22, "SeeAlso",ExpressionUUID->"8494be4c-7355-4d5c-9527-014923c7ccff",
 CellID->1951493320],
Cell[15102, 424, 413, 9, 22, "SeeAlso",ExpressionUUID->"90ce3d2c-82b8-42cb-95c2-24677d8f0554",
 CellID->1626547747]
}, Open  ]],
Cell[CellGroupData[{
Cell[15552, 438, 112, 1, 31, "MoreAboutSection",ExpressionUUID->"57af1b8f-f288-42b1-a07a-5352578cdc88",
 CellID->38303248],
Cell[15667, 441, 110, 1, 16, "MoreAbout",ExpressionUUID->"d27772fe-bef2-4463-ba2f-a749ca955fdb",
 CellID->1665078683]
}, Open  ]],
Cell[CellGroupData[{
Cell[15814, 447, 411, 11, 70, "PrimaryExamplesSection",ExpressionUUID->"738df489-4595-4044-b42d-b0ba38096787",
 CellID->880084151],
Cell[CellGroupData[{
Cell[16250, 462, 242, 5, 17, "ExampleDelimiter",ExpressionUUID->"d884027b-08a9-4663-96c9-da6ab958c99e",
 CellID->354573589],
Cell[16495, 469, 151, 2, 27, "Input",ExpressionUUID->"881536f2-1860-4737-896d-e595dc264efc",
 CellID->1197403608],
Cell[16649, 473, 191, 2, 22, "ExampleText",ExpressionUUID->"7237aa03-11c5-42ac-96c2-14c7b1e7d823",
 CellID->19048904],
Cell[CellGroupData[{
Cell[16865, 479, 260, 5, 27, "Input",ExpressionUUID->"cd5a536a-8e55-4cb3-a69f-bd9eb5c1d651",
 CellID->165881856],
Cell[17128, 486, 2432, 52, 45, "Output",ExpressionUUID->"37fc3d0d-f2d4-40c2-85a9-cea72f514807",
 CellID->2127965559]
}, Open  ]],
Cell[19575, 541, 250, 4, 22, "ExampleText",ExpressionUUID->"5234ba06-518a-4bfe-8639-48e3018fb79e",
 CellID->774817758],
Cell[CellGroupData[{
Cell[19850, 549, 324, 7, 27, "Input",ExpressionUUID->"504a6ae4-8444-4b54-8e1e-9c0dd76a81dd",
 CellID->1794352644],
Cell[20177, 558, 3353, 72, 71, "Output",ExpressionUUID->"3a7d6a42-d28d-4f11-a9c1-a51abd33c9ea",
 CellID->383428764]
}, Open  ]],
Cell[23545, 633, 272, 4, 22, "ExampleText",ExpressionUUID->"16a70b55-6e5b-4802-86e6-8761857302df",
 CellID->1716840566],
Cell[CellGroupData[{
Cell[23842, 641, 320, 6, 27, "Input",ExpressionUUID->"506df449-9401-4e10-a5b4-3fb4ce228ebe",
 CellID->1596581364],
Cell[24165, 649, 53471, 1066, 326, "Output",ExpressionUUID->"e5c8bd8f-3e54-4775-997a-05eb8592f127",
 CellID->1709608062]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77697, 1722, 155, 2, 70, "ExtendedExamplesSection",ExpressionUUID->"b2dcf50c-23c4-4dca-a033-abcd0a4e997a",
 CellTags->"ExtendedExamples",
 CellID->1854448968],
Cell[77855, 1726, 242, 5, 70, "ExampleSection",ExpressionUUID->"7e7328ef-5126-4c4a-b67f-c3bcaee1666e",
 CellID->1293636265],
Cell[78100, 1733, 265, 5, 70, "ExampleSection",ExpressionUUID->"c31e5c51-156c-4dad-a3b5-fc67d2544c91",
 CellID->1020263627],
Cell[CellGroupData[{
Cell[78390, 1742, 244, 5, 70, "ExampleSection",ExpressionUUID->"e3ee5364-c4db-4848-9fb5-4da8dfe88071",
 CellID->2061341341],
Cell[78637, 1749, 247, 5, 70, "ExampleSubsection",ExpressionUUID->"8c99a826-b900-4868-ab08-86839b2f8da7",
 CellID->1757724783],
Cell[78887, 1756, 247, 5, 70, "ExampleSubsection",ExpressionUUID->"68a8cf43-6c4b-44c2-9538-f2cabbcb5922",
 CellID->1295379749]
}, Closed]],
Cell[79149, 1764, 248, 5, 70, "ExampleSection",ExpressionUUID->"e8dac25c-049e-4894-b0b9-5f8c9d45dc77",
 CellID->258228157],
Cell[79400, 1771, 259, 5, 70, "ExampleSection",ExpressionUUID->"9af0e973-9c43-480f-8bd5-8d68376d1385",
 CellID->2123667759],
Cell[79662, 1778, 252, 5, 70, "ExampleSection",ExpressionUUID->"8b233114-bce2-458e-b88a-2cab623952db",
 CellID->1305812373],
Cell[79917, 1785, 257, 5, 70, "ExampleSection",ExpressionUUID->"4a9d253e-b58d-4124-8301-2f39fa5c87c3",
 CellID->1653164318],
Cell[80177, 1792, 249, 5, 70, "ExampleSection",ExpressionUUID->"a7d18140-9722-43d4-9654-6399ce3ccf65",
 CellID->589267740]
}, Open  ]],
Cell[CellGroupData[{
Cell[80463, 1802, 128, 1, 70, "DesignDiscussionSection",ExpressionUUID->"10f08874-be4a-4a15-9982-a6d0a24b3ae8",
 CellID->1775809863],
Cell[80594, 1805, 107, 1, 70, "DesignDiscussion",ExpressionUUID->"e3d50c05-e502-4f7e-8f12-3687c14692fb",
 CellID->308641435]
}, Open  ]],
Cell[CellGroupData[{
Cell[80738, 1811, 128, 1, 70, "ApplicationNotesSection",ExpressionUUID->"128f3346-cccd-49f5-afdd-a6a25f0d5f05",
 CellID->1163590540],
Cell[80869, 1814, 108, 1, 70, "ApplicationNotes",ExpressionUUID->"e21795e9-285b-4d10-b006-7c4a7484043b",
 CellID->1480116198]
}, Open  ]],
Cell[80992, 1818, 113, 1, 70, "TestCasesSection",ExpressionUUID->"1d4e89c2-15d7-4d50-ae54-667a85a4dcf2",
 CellID->725748110],
Cell[CellGroupData[{
Cell[81130, 1823, 120, 1, 70, "FunctionEssaySection",ExpressionUUID->"f92da85e-fc7b-493b-966f-88c0baa96be0",
 CellID->37427227],
Cell[81253, 1826, 104, 1, 70, "FunctionEssay",ExpressionUUID->"1d72d4df-5e15-4ef7-b41c-f1b84bd2c5a0",
 CellID->356990964]
}, Open  ]]
}
]
*)

