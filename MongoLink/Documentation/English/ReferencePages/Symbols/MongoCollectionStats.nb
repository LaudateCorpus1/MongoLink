(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     92351,       2064]
NotebookOptionsPosition[     81652,       1842]
NotebookOutlinePosition[     82863,       1876]
CellTagsIndexPosition[     82783,       1871]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["11.3", "HistoryData",
  CellTags->"New",ExpressionUUID->"3fa4726a-cb51-4cd4-9b51-5dbd958512ed"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"994a5824-ba0a-4c23-b49b-55bd9d238eb6"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"551002e3-3564-447d-8a42-1e8fd48aa10b"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"4fb89894-a79c-49ce-951c-95e296b6f6f5"]
}], "History",
 CellID->870024872,ExpressionUUID->"1dc9f4a5-df10-468f-8fed-f06895d1bd42"],

Cell["Created by: sebastianb on 09-03-2017 00:52:43", "AuthorDate",
 CellID->929957821,ExpressionUUID->"bb7f5a0e-b909-4893-af08-b3a7556c21b7"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"8797dea1-45ab-40eb-8514-fc9d758ddf33"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"8761114a-839f-4271-aacc-7895dd88b349"],

Cell["MongoLink", "Categorization",
 CellChangeTimes->{3.713370199780055*^9},
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"7364db87-4df0-4926-a49b-825b5f98762e"],

Cell["MongoLink`", "Categorization",
 CellChangeTimes->{3.713370203069344*^9},
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"a67611bc-c111-446f-8e72-8adb73887b60"],

Cell["MongoLink/ref/MongoCollectionStats", "Categorization",
 CellChangeTimes->{{3.71337020830542*^9, 3.713370212098941*^9}, {
  3.7133816141788816`*^9, 3.7133816171538687`*^9}},
 CellLabel->"URI",
 CellID->882684644,ExpressionUUID->"fbbe74f8-43a9-4d08-8f0f-70a772c61a40"],

Cell["XXXX", "Categorization",
 CellLabel->"Title Modifier",
 CellID->172747495,ExpressionUUID->"a7b72039-89ec-4a7d-ace6-f151e5c5bba1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Synonyms", "SynonymsSection",
 CellID->1427418553,ExpressionUUID->"5517580a-dd75-494b-a0c3-631c32045b64"],

Cell["XXXX", "Synonyms",
 CellID->1251652828,ExpressionUUID->"e14387bc-101b-4662-8790-7c11f2d851a5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->477174294,ExpressionUUID->"5ae8e3e7-05f1-458b-859e-0098104face0"],

Cell["XXXX", "Keywords",
 CellID->1164421360,ExpressionUUID->"41c05580-51d3-42c6-acf5-8cf3dff0bcc5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1872225408,ExpressionUUID->"c8975ad8-7796-453f-b356-2f6ec136d095"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1562036412,ExpressionUUID->"7a6be6cd-5ba6-4d39-8878-6f921827c733"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->158391909,ExpressionUUID->"fa208b88-10cb-48c6-a60e-1d79650eff9d"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1360575930,ExpressionUUID->"05f1d0e1-e652-49ca-943f-c9d34c6b3d22"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->793782254,ExpressionUUID->"4f4dc36b-fcae-4bab-92a1-15af5099b550"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"8dba75e3-9387-4ca0-9523-764ab25b46f2"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->49458704,ExpressionUUID->"3939c578-57ed-403c-a6df-e01a7d47a0c6"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"12fdbec0-b51c-4ea2-8b1c-a0c1cf4acb3e"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->422270209,ExpressionUUID->"f2589827-63b7-40d0-9a4f-c1eae3f083ba"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->545239557,ExpressionUUID->"d365254a-0a5d-47b6-8280-70b86f7d2a50"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->121292707,ExpressionUUID->"a624cce3-bfdd-4d6f-86f7-66db0225795c"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->29314406,ExpressionUUID->"74122aa0-1825-44bb-a3d0-82e9f9ecf5f8"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->96001539,ExpressionUUID->"b757d17a-8dbf-4899-ac88-b9c9ac318c37"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->123278822,ExpressionUUID->"4a041336-b56e-4fa9-a8f5-bf682641028a"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"8daca241-419b-434e-9a3d-d9921111b356"]
}, Closed]],

Cell[CellGroupData[{

Cell["Security Details", "SecuritySection",
 CellID->13551076,ExpressionUUID->"12b2cee7-4a12-420a-9c96-0d2b80220652"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{CheckboxBox[
        Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "SecurityRisk"}, False]]],
       StyleBox[
       "\"   Potential security risk\"", FontFamily -> "Arial", FontSize -> 
        10, StripOnInput -> False]},
      "RowDefault"]},
    {
     DynamicBox[ToBoxes[
       If[
        TrueQ[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "SecurityRisk"}]], 
        InputField[
         Dynamic[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "SecurityExplanation"}, ""]], 
         String, FieldHint -> "How so? (optional)", FieldSize -> {40, 5}, 
         BaseStyle -> {FontFamily -> "Arial", FontSize -> 12}], ""], 
       StandardForm],
      ImageSizeCache->{0., {0., 5.}}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "SecurityDetails",
 CellID->2488900,ExpressionUUID->"1cd93454-3562-466f-b675-e5d9e7563a5d"]
}, Closed]],

Cell[CellGroupData[{

Cell["MongoCollectionStats", "ObjectName",
 CellChangeTimes->{3.713381636000679*^9},
 CellID->1224892054,ExpressionUUID->"067c281a-de74-4b27-84bd-366cdc067af9"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"0339b675-383f-4c8b-97e6-20c3a7112c08"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["MongoCollectionStats",
    BaseStyle->"Link",
    ButtonData->"paclet:MongoLink/ref/MongoCollectionStats"], "[", 
   RowBox[{
    ButtonBox["MongoCollection",
     BaseStyle->"Link",
     ButtonData->"paclet:MongoLink/ref/MongoCollection"], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}], "]"}]], "InlineFormula",
  ExpressionUUID->"2c9ebfcc-aaec-4b8c-b8bd-b34bbaddf600"],
 " \[LineSeparator]obtain a variety of statistics related to the ",
 Cell[BoxData[
  ButtonBox["MongoCollection",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollection"]], "InlineFormula",
  ExpressionUUID->"35da5711-55b0-4bae-b661-3b87be91cb75"],
 "."
}], "Usage",
 CellChangeTimes->{{3.7133816383193207`*^9, 3.7133816529420033`*^9}, {
  3.713382445277076*^9, 3.7133824812784967`*^9}, {3.714230966793998*^9, 
  3.7142309709607897`*^9}, {3.7150019839198637`*^9, 3.715001986178816*^9}, {
  3.7150020176031322`*^9, 3.715002017603244*^9}},
 CellID->982511436,ExpressionUUID->"28b1b5e1-76bf-43e0-be3a-d4372b2eb19e"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["MongoCollectionStats",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionStats"]], "InlineFormula",
  ExpressionUUID->"a5fd7a8b-e857-4058-a631-11dd943a1212"],
 " returns a ",
 Cell[BoxData[
  ButtonBox["Dataset",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "b2334ddc-1c96-4614-812a-19a2ea54c0cd"],
 "."
}], "Notes",
 CellChangeTimes->{{3.713382485220433*^9, 3.713382514929021*^9}, {
   3.715002021043584*^9, 3.715002021043676*^9}, {3.715698223361225*^9, 
   3.7156982500000963`*^9}, {3.715698399856536*^9, 3.7156984375854483`*^9}, {
   3.715698512031393*^9, 3.7156985169871397`*^9}, {3.7156985919991503`*^9, 
   3.715698610797062*^9}, {3.715698772240777*^9, 3.7156987990011377`*^9}, {
   3.715699122341744*^9, 3.715699124956053*^9}, {3.715699194836678*^9, 
   3.715699205625588*^9}, 3.715699669711871*^9, 3.715700481808972*^9},
 CellID->1067943069,ExpressionUUID->"21e16f68-38dc-4ac4-97c1-6c02144c5f12"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["MongoCollectionStats",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionStats"]], "InlineFormula",
  ExpressionUUID->"6ff35524-a319-4845-ac82-abbfe21a5f25"],
 " corresponds to ",
 ButtonBox["db.getCollectionInfos()",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://docs.mongodb.com/manual/reference/method/db.\
getCollectionInfos/"], None},
  ButtonNote->
   "https://docs.mongodb.com/manual/reference/method/db.getCollectionInfos/"],\

 " in the MongoDB documentation."
}], "Notes",
 CellChangeTimes->{{3.714222709589572*^9, 3.71422273913186*^9}, 
   3.715002022997698*^9},
 CellID->280614056,ExpressionUUID->"abf667c6-b041-48d3-b12b-5fd5f5d0950a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tutorials", "TutorialsSection",
 CellID->250839057,ExpressionUUID->"559b4e43-f7b8-4474-8aa1-8f1827d155a7"],

Cell[TextData[{
 StyleBox[ButtonBox["MongoLink ",
  BaseStyle->"Link",
  ButtonData->"paclet:MongoLink/tutorial/MongoLinkSimpleTutorial"],
  FontSlant->"Italic"],
 ButtonBox["Simple Tutorial",
  BaseStyle->"Link",
  ButtonData->"paclet:MongoLink/tutorial/MongoLinkSimpleTutorial"]
}], "Tutorials",
 CellChangeTimes->{3.714497010832203*^9, 3.7150019971670218`*^9},
 CellID->341631938,ExpressionUUID->"73e3d4a5-899f-4081-a41d-d0f2fbceae1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1268215905,ExpressionUUID->"8c7e753f-578f-413e-a219-191916f64b4a"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1129518860,ExpressionUUID->"8bb68709-a6a6-4b07-a20e-b2acee07822e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1584193535,ExpressionUUID->"6c01650f-465d-4a0b-ab3e-3a41ef6414d9"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1253309177,ExpressionUUID->"e1f0ea4a-a4f7-4bbd-9ac4-127cc81fbacb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1255426704,ExpressionUUID->"c8e8322b-684f-4ef6-bc5b-899254247373"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["MongoCollection",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollection"]], "InlineFormula",
  ExpressionUUID->"161839aa-032d-4221-9276-09d31c2709f1"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionAggregate",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionAggregate"]], 
  "InlineFormula",ExpressionUUID->"1fbee114-b476-44d3-899f-313d918bd02c"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionCount",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionCount"]], "InlineFormula",
  ExpressionUUID->"93b6e358-aca5-4efd-9808-e8bbfa2f889d"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionDeleteMany",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionDeleteMany"]], 
  "InlineFormula",ExpressionUUID->"1b0a6ab2-2f30-4001-9807-938a63d49baa"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionDeleteOne",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionDeleteOne"]], 
  "InlineFormula",ExpressionUUID->"d089417a-1334-4928-9b39-696e533464a1"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionFind",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionFind"]], "InlineFormula",
  ExpressionUUID->"cc470b5c-abae-496e-960c-94429656c745"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionFindOne",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionFindOne"]], 
  "InlineFormula",ExpressionUUID->"4f578c95-ce76-47a4-bd53-0a5e85d9e147"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionInsert",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionInsert"]], 
  "InlineFormula",ExpressionUUID->"a41e7411-8203-432b-9519-a7b283875651"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionName",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionName"]], "InlineFormula",
  ExpressionUUID->"58c1b545-b344-4701-9efb-f87dca6c6c24"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionReplaceOne",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionReplaceOne"]], 
  "InlineFormula",ExpressionUUID->"f61c8a21-9210-4802-87ae-924c065cbc08"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionUpdateMany",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionUpdateMany"]], 
  "InlineFormula",ExpressionUUID->"767210f6-6f03-4e56-8195-e3e1546e8949"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["MongoCollectionUpdateOne",
   BaseStyle->"Link",
   ButtonData->"paclet:MongoLink/ref/MongoCollectionUpdateOne"]], 
  "InlineFormula",ExpressionUUID->"13c9cf5b-dfc2-4512-ba28-aff22b8dd497"]
}], "SeeAlso",
 CellChangeTimes->{{3.71569827066413*^9, 3.715698271477497*^9}, {
  3.715698301759058*^9, 3.715698301996151*^9}},
 CellID->1540821219,ExpressionUUID->"b05cfb48-2b46-4913-a795-3d2b14ad8c39"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "MoreAboutSection",
 CellID->38303248,ExpressionUUID->"57af1b8f-f288-42b1-a07a-5352578cdc88"],

Cell["Autogenerated", "MoreAbout",
 CellID->1665078683,ExpressionUUID->"d27772fe-bef2-4463-ba2f-a749ca955fdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->880084151,ExpressionUUID->"738df489-4595-4044-b42d-b0ba38096787"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1b772bd4-7f5e-4e3e-bf07-34575ec32f0f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->354573589,ExpressionUUID->"d884027b-08a9-4663-96c9-da6ab958c99e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MongoLink`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.713348578281341*^9, 3.713348584965271*^9}},
 CellLabel->"In[1]:=",
 CellID->1553863953,ExpressionUUID->"135f5174-447c-4206-8728-fb9b34dbd13e"],

Cell["Connect to a client:", "ExampleText",
 CellChangeTimes->{{3.70966024037395*^9, 3.70966024649963*^9}, {
  3.709661229380495*^9, 3.709661237113892*^9}},
 CellID->1212887918,ExpressionUUID->"d25f439c-d457-43b2-8d86-dfd7cc4cd285"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"client", "=", 
  RowBox[{"OpenMongoConnection", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.709660249795392*^9, 3.709660264856126*^9}, {
   3.709660464832882*^9, 3.7096604654166327`*^9}, 3.7096605027142277`*^9, {
   3.709660863217078*^9, 3.709660900795587*^9}, 3.710004715780945*^9, 
   3.710004800797724*^9, 3.710070489584908*^9, {3.7133439438936663`*^9, 
   3.7133439452054853`*^9}, 3.713344088613558*^9, {3.7133441556604643`*^9, 
   3.713344160149191*^9}},
 CellLabel->"In[2]:=",
 CellID->1092460502,ExpressionUUID->"ff097153-e9e4-4463-b3e4-83313b92eb4c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["MongoClient",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  MongoLink`MongoClient[
   MongoLink`PackageScope`clientMLE[1]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7133440889393463`*^9, 3.713344161101705*^9, 3.715689832995318*^9, 
   3.715690183790409*^9, 3.715690677772003*^9, 3.7156908532257853`*^9, {
   3.715691081862401*^9, 3.715691100121876*^9}, 3.715691813382992*^9, 
   3.715692057558777*^9, 3.715702367910108*^9},
 CellLabel->"Out[2]=",
 CellID->1469430961,ExpressionUUID->"80ea54c3-5846-48a2-8a08-d14608246b2e"]
}, Open  ]],

Cell["\<\
Connect to a the \"WolframTestCollection\" collection in the \
\"WolframTestDB\" database:\
\>", "ExampleText",
 CellChangeTimes->{{3.710004777458806*^9, 3.7100047825534887`*^9}, 
   3.710004893302121*^9, {3.715691971016769*^9, 3.7156919975673103`*^9}},
 CellID->1120404447,ExpressionUUID->"a0c378bf-9de5-4d7a-8b49-5531429ee72c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coll", "=", 
  RowBox[{
   RowBox[{"client", "[", "\"\<WolframTestDB\>\"", "]"}], "[", 
   "\"\<WolframTestCollection\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7100047512510433`*^9, 3.710004771137354*^9}, {
   3.710004873351432*^9, 3.7100048744145947`*^9}, {3.713348613045371*^9, 
   3.713348622633041*^9}, {3.71334882704704*^9, 3.7133488334853354`*^9}, {
   3.715690814769546*^9, 3.715690816432075*^9}, {3.715691069377246*^9, 
   3.7156910701345387`*^9}, 3.715691789442197*^9, {3.71569187589589*^9, 
   3.715691882987496*^9}},
 CellLabel->"In[3]:=",
 CellID->1500923833,ExpressionUUID->"6f6dfc52-6283-4013-bf5a-89415eba898e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["MongoCollection",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"WolframTestCollection\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Database: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"WolframTestDB\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"WolframTestCollection\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Database: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"WolframTestDB\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  MongoLink`MongoCollection[
   MongoLink`PackageScope`collectionMLE[1], "WolframTestDB", 
   "WolframTestCollection", 
   MongoLink`MongoClient[
    MongoLink`PackageScope`clientMLE[1]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7100047730141172`*^9, 3.710004918207663*^9, 3.7100050542665977`*^9, {
   3.713348615728001*^9, 3.7133486272737722`*^9}, 3.7133488341140413`*^9, 
   3.7133675273476553`*^9, 3.713368226711225*^9, 3.7133683601985083`*^9, 
   3.715690853349231*^9, {3.715691082022496*^9, 3.715691100248952*^9}, 
   3.7156918134317904`*^9, 3.715691888121193*^9, 3.7156920576018553`*^9, 
   3.715702367953882*^9},
 CellLabel->"Out[3]=",
 CellID->664221027,ExpressionUUID->"5951e8ee-7735-468d-a726-57cfdae2f006"]
}, Open  ]],

Cell["Obtain a variety of statistics related to the collection:", \
"ExampleText",
 CellChangeTimes->{{3.713382125810454*^9, 3.713382181521886*^9}, {
  3.71338231663693*^9, 3.713382339994821*^9}},
 CellID->1716840566,ExpressionUUID->"16a70b55-6e5b-4802-86e6-8761857302df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"MongoCollectionStats", "[", "coll", "]"}]}]], "Input",
 CellChangeTimes->{{3.7133818185481052`*^9, 3.7133818237061243`*^9}, {
  3.713382038688705*^9, 3.713382039045965*^9}},
 CellLabel->"In[4]:=",
 CellID->1596581364,ExpressionUUID->"506df449-9401-4e10-a5b4-3fb4ce228ebe"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 12, "InitialType" -> 
        TypeSystem`Struct[{
          "ns", "size", "count", "avgObjSize", "storageSize", "capped", 
           "wiredTiger", "nindexes", "indexDetails", "totalIndexSize", 
           "indexSizes", "ok"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[TypeSystem`Boolean], 
           
           TypeSystem`Struct[{
            "metadata", "creationString", "type", "uri", "LSM", 
             "block-manager", "btree", "cache", "cache_walk", "compression", 
             "cursor", "reconciliation", "session", "transaction"}, {
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "bloom filter false positives", "bloom filter hits", 
                "bloom filter misses", 
                "bloom filter pages evicted from cache", 
                "bloom filter pages read into cache", 
                "bloom filters in the LSM tree", "chunks in the LSM tree", 
                "highest merge generation in the LSM tree", 
                "queries that could have benefited from a Bloom filter that \
did not exist", "sleep for LSM checkpoint throttle", 
                "sleep for LSM merge throttle", 
                "total size of bloom filters"]], 
              TypeSystem`Atom[Integer], 12], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "allocations requiring file extension", "blocks allocated", 
                "blocks freed", "checkpoint size", 
                "file allocation unit size", "file bytes available for reuse",
                 "file magic number", "file major version number", 
                "file size in bytes", "minor version number"]], 
              TypeSystem`Atom[Integer], 10], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 18], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 23], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 18], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "compressed pages read", "compressed pages written", 
                "page written failed to compress", 
                "page written was too small to compress", 
                "raw compression call failed, additional data available", 
                "raw compression call failed, no additional data available", 
                "raw compression call succeeded"]], 
              TypeSystem`Atom[Integer], 7], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "bulk-loaded cursor-insert calls", "create calls", 
                "cursor-insert key and value bytes inserted", 
                "cursor-remove key bytes removed", 
                "cursor-update value bytes updated", "insert calls", 
                "next calls", "prev calls", "remove calls", "reset calls", 
                "restarted searches", "search calls", "search near calls", 
                "truncate calls", "update calls"]], 
              TypeSystem`Atom[Integer], 15], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "dictionary matches", "fast-path pages deleted", 
                "internal page key bytes discarded using suffix compression", 
                "internal page multi-block writes", 
                "internal-page overflow keys", 
                "leaf page key bytes discarded using prefix compression", 
                "leaf page multi-block writes", "leaf-page overflow keys", 
                "maximum blocks required for a page", 
                "overflow values written", "page checksum matches", 
                "page reconciliation calls", 
                "page reconciliation calls for eviction", "pages deleted"]], 
              TypeSystem`Atom[Integer], 14], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "object compaction", "open cursor count"]], 
              TypeSystem`Atom[Integer], 2], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 1]}], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            
            TypeSystem`Struct[{
             "metadata", "creationString", "type", "uri", "LSM", 
              "block-manager", "btree", "cache", "cache_walk", "compression", 
              "cursor", "reconciliation", "session", "transaction"}, {
              TypeSystem`Struct[{"formatVersion", "infoObj"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[String]}], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "bloom filter false positives", "bloom filter hits", 
                 "bloom filter misses", 
                 "bloom filter pages evicted from cache", 
                 "bloom filter pages read into cache", 
                 "bloom filters in the LSM tree", "chunks in the LSM tree", 
                 "highest merge generation in the LSM tree", 
                 "queries that could have benefited from a Bloom filter that \
did not exist", "sleep for LSM checkpoint throttle", 
                 "sleep for LSM merge throttle", 
                 "total size of bloom filters"]], 
               TypeSystem`Atom[Integer], 12], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "allocations requiring file extension", "blocks allocated", 
                 "blocks freed", "checkpoint size", 
                 "file allocation unit size", 
                 "file bytes available for reuse", "file magic number", 
                 "file major version number", "file size in bytes", 
                 "minor version number"]], 
               TypeSystem`Atom[Integer], 10], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 18], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 23], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 18], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "compressed pages read", "compressed pages written", 
                 "page written failed to compress", 
                 "page written was too small to compress", 
                 "raw compression call failed, additional data available", 
                 "raw compression call failed, no additional data available", 
                 "raw compression call succeeded"]], 
               TypeSystem`Atom[Integer], 7], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "bulk-loaded cursor-insert calls", "create calls", 
                 "cursor-insert key and value bytes inserted", 
                 "cursor-remove key bytes removed", 
                 "cursor-update value bytes updated", "insert calls", 
                 "next calls", "prev calls", "remove calls", "reset calls", 
                 "restarted searches", "search calls", "search near calls", 
                 "truncate calls", "update calls"]], 
               TypeSystem`Atom[Integer], 15], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "dictionary matches", "fast-path pages deleted", 
                 "internal page key bytes discarded using suffix compression",
                  "internal page multi-block writes", 
                 "internal-page overflow keys", 
                 "leaf page key bytes discarded using prefix compression", 
                 "leaf page multi-block writes", "leaf-page overflow keys", 
                 "maximum blocks required for a page", 
                 "overflow values written", "page checksum matches", 
                 "page reconciliation calls", 
                 "page reconciliation calls for eviction", "pages deleted"]], 
               
               TypeSystem`Atom[Integer], 14], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "object compaction", "open cursor count"]], 
               TypeSystem`Atom[Integer], 2], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 1]}], 1], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer], 1], 
           TypeSystem`Atom[Real]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"ns"} -> 
           TypeSystem`PackageScope`AtomShape[336.00000000000006`], {"size"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"count"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"avgObjSize"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"storageSize"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"capped"} -> 
           TypeSystem`PackageScope`AtomShape[36], {"wiredTiger"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"nindexes"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"indexDetails"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"totalIndexSize"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"indexSizes"} -> 
           TypeSystem`PackageScope`ElidedShape[1], {"ok"} -> 
           TypeSystem`PackageScope`AtomShape[60]], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[911228533], "Type" -> 
        TypeSystem`Struct[{
          "ns", "size", "count", "avgObjSize", "storageSize", "capped", 
           "wiredTiger", "nindexes", "indexDetails", "totalIndexSize", 
           "indexSizes", "ok"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[TypeSystem`Boolean], 
           TypeSystem`Struct[{
            "metadata", "creationString", "type", "uri", "LSM", 
             "block-manager", "btree", "cache", "cache_walk", "compression", 
             "cursor", "reconciliation", "session", "transaction"}, {
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "bloom filter false positives", "bloom filter hits", 
                "bloom filter misses", 
                "bloom filter pages evicted from cache", 
                "bloom filter pages read into cache", 
                "bloom filters in the LSM tree", "chunks in the LSM tree", 
                "highest merge generation in the LSM tree", 
                "queries that could have benefited from a Bloom filter that \
did not exist", "sleep for LSM checkpoint throttle", 
                "sleep for LSM merge throttle", 
                "total size of bloom filters"]], 
              TypeSystem`Atom[Integer], 12], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "allocations requiring file extension", "blocks allocated", 
                "blocks freed", "checkpoint size", 
                "file allocation unit size", "file bytes available for reuse",
                 "file magic number", "file major version number", 
                "file size in bytes", "minor version number"]], 
              TypeSystem`Atom[Integer], 10], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 18], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 23], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 18], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "compressed pages read", "compressed pages written", 
                "page written failed to compress", 
                "page written was too small to compress", 
                "raw compression call failed, additional data available", 
                "raw compression call failed, no additional data available", 
                "raw compression call succeeded"]], 
              TypeSystem`Atom[Integer], 7], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "bulk-loaded cursor-insert calls", "create calls", 
                "cursor-insert key and value bytes inserted", 
                "cursor-remove key bytes removed", 
                "cursor-update value bytes updated", "insert calls", 
                "next calls", "prev calls", "remove calls", "reset calls", 
                "restarted searches", "search calls", "search near calls", 
                "truncate calls", "update calls"]], 
              TypeSystem`Atom[Integer], 15], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "dictionary matches", "fast-path pages deleted", 
                "internal page key bytes discarded using suffix compression", 
                "internal page multi-block writes", 
                "internal-page overflow keys", 
                "leaf page key bytes discarded using prefix compression", 
                "leaf page multi-block writes", "leaf-page overflow keys", 
                "maximum blocks required for a page", 
                "overflow values written", "page checksum matches", 
                "page reconciliation calls", 
                "page reconciliation calls for eviction", "pages deleted"]], 
              TypeSystem`Atom[Integer], 14], 
             TypeSystem`Assoc[
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "object compaction", "open cursor count"]], 
              TypeSystem`Atom[Integer], 2], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Atom[Integer], 1]}], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{
             "metadata", "creationString", "type", "uri", "LSM", 
              "block-manager", "btree", "cache", "cache_walk", "compression", 
              "cursor", "reconciliation", "session", "transaction"}, {
              TypeSystem`Struct[{"formatVersion", "infoObj"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[String]}], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "bloom filter false positives", "bloom filter hits", 
                 "bloom filter misses", 
                 "bloom filter pages evicted from cache", 
                 "bloom filter pages read into cache", 
                 "bloom filters in the LSM tree", "chunks in the LSM tree", 
                 "highest merge generation in the LSM tree", 
                 "queries that could have benefited from a Bloom filter that \
did not exist", "sleep for LSM checkpoint throttle", 
                 "sleep for LSM merge throttle", 
                 "total size of bloom filters"]], 
               TypeSystem`Atom[Integer], 12], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "allocations requiring file extension", "blocks allocated", 
                 "blocks freed", "checkpoint size", 
                 "file allocation unit size", 
                 "file bytes available for reuse", "file magic number", 
                 "file major version number", "file size in bytes", 
                 "minor version number"]], 
               TypeSystem`Atom[Integer], 10], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 18], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 23], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 18], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "compressed pages read", "compressed pages written", 
                 "page written failed to compress", 
                 "page written was too small to compress", 
                 "raw compression call failed, additional data available", 
                 "raw compression call failed, no additional data available", 
                 "raw compression call succeeded"]], 
               TypeSystem`Atom[Integer], 7], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "bulk-loaded cursor-insert calls", "create calls", 
                 "cursor-insert key and value bytes inserted", 
                 "cursor-remove key bytes removed", 
                 "cursor-update value bytes updated", "insert calls", 
                 "next calls", "prev calls", "remove calls", "reset calls", 
                 "restarted searches", "search calls", "search near calls", 
                 "truncate calls", "update calls"]], 
               TypeSystem`Atom[Integer], 15], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "dictionary matches", "fast-path pages deleted", 
                 "internal page key bytes discarded using suffix compression",
                  "internal page multi-block writes", 
                 "internal-page overflow keys", 
                 "leaf page key bytes discarded using prefix compression", 
                 "leaf page multi-block writes", "leaf-page overflow keys", 
                 "maximum blocks required for a page", 
                 "overflow values written", "page checksum matches", 
                 "page reconciliation calls", 
                 "page reconciliation calls for eviction", "pages deleted"]], 
               
               TypeSystem`Atom[Integer], 14], 
              TypeSystem`Assoc[
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "object compaction", "open cursor count"]], 
               TypeSystem`Atom[Integer], 2], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Atom[Integer], 1]}], 1], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer], 1], 
           TypeSystem`Atom[Real]}], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[911228533]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ns\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ns\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["ns"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["ns"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["WolframTestDB.WolframTestCollection", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["ns"]]], "Mouse"], 
                ImageSize -> {{336.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"size\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"size\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["size"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["size"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["181"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["size"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"count\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"count\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["count"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["count"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["count"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"avgObjSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"avgObjSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["avgObjSize"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["avgObjSize"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["60"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["avgObjSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"storageSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"storageSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["storageSize"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["storageSize"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32768"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["storageSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"capped\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"capped\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["capped"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["capped"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["capped"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"wiredTiger\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"wiredTiger\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["wiredTiger"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["wiredTiger"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 14], "\[RightAssociation]"}], 
                    Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 14], "\[RightAssociation]"}], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["wiredTiger"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["wiredTiger"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"nindexes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"nindexes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["nindexes"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["nindexes"]]], "Mouse"], Background -> GrayLevel[0.95],
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["nindexes"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"indexDetails\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"indexDetails\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["indexDetails"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["indexDetails"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"_id_"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"_id_"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["indexDetails"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["indexDetails"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"totalIndexSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"totalIndexSize\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["totalIndexSize"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["totalIndexSize"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["32768"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["totalIndexSize"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"indexSizes\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"indexSizes\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["indexSizes"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["indexSizes"]]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[
                    Association["_id_" -> 32768], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association["_id_" -> 32768], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["indexSizes"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["indexSizes"]]], "Mouse"]]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ok\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ok\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][{
                    
                    Key["ok"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["ok"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
                 
                  GeneralUtilities`Slice[
                   Key["ok"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 756374216]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[756374216][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {444., {153.8544921875, 159.1455078125}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.713381824038619*^9, 3.713382000467977*^9, 
  3.7133820395107317`*^9, 3.715692058351645*^9, 3.715702368771747*^9},
 CellLabel->"Out[4]=",
 CellID->942803683,ExpressionUUID->"34d07cde-f321-4916-a311-65d7cee99bc4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1854448968,ExpressionUUID->"b2dcf50c-23c4-4dca-a033-abcd0a4e997a"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "a83902d9-b54c-40dd-85ff-26cbd9194ca7"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1293636265,ExpressionUUID->"7e7328ef-5126-4c4a-b67f-c3bcaee1666e"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "7b2d3257-45ae-4d4e-abf3-6cf0bb0df158"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1020263627,ExpressionUUID->"c31e5c51-156c-4dad-a3b5-fc67d2544c91"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "0e2e07cc-11c5-40f1-86e0-2e8dd09a6325"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2061341341,ExpressionUUID->"e3ee5364-c4db-4848-9fb5-4da8dfe88071"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "245f0389-4c1c-4087-81a0-ccbdb5baa6fc"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1757724783,ExpressionUUID->"8c99a826-b900-4868-ab08-86839b2f8da7"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "e24605c3-e3e9-4eea-92e3-f3cecff41ec7"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1295379749,ExpressionUUID->"68a8cf43-6c4b-44c2-9538-f2cabbcb5922"]
}, Closed]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "0af49378-c883-4449-afed-11bc3ad9cc22"],
  $Line = 0; Null]], "ExampleSection",
 CellID->258228157,ExpressionUUID->"e8dac25c-049e-4894-b0b9-5f8c9d45dc77"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "6cb531af-2981-49f5-af3c-7506d5e2b756"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759,ExpressionUUID->"9af0e973-9c43-480f-8bd5-8d68376d1385"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "92b9ae23-7aa1-4ce3-a2d3-e8591a053b91"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373,ExpressionUUID->"8b233114-bce2-458e-b88a-2cab623952db"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "ae26c962-c4b8-40eb-9662-b53b963a2955"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1653164318,ExpressionUUID->"4a9d253e-b58d-4124-8301-2f39fa5c87c3"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "c5997200-f1d2-4628-8506-20e4dc21f09f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740,ExpressionUUID->"a7d18140-9722-43d4-9654-6399ce3ccf65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Design Discussion", "DesignDiscussionSection",
 CellID->1775809863,ExpressionUUID->"10f08874-be4a-4a15-9982-a6d0a24b3ae8"],

Cell["XXXX", "DesignDiscussion",
 CellID->308641435,ExpressionUUID->"e3d50c05-e502-4f7e-8f12-3687c14692fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application Notes", "ApplicationNotesSection",
 CellID->1163590540,ExpressionUUID->"128f3346-cccd-49f5-afdd-a6a25f0d5f05"],

Cell["XXXX", "ApplicationNotes",
 CellID->1480116198,ExpressionUUID->"e21795e9-285b-4d10-b006-7c4a7484043b"]
}, Open  ]],

Cell["Test Cases", "TestCasesSection",
 CellID->725748110,ExpressionUUID->"1d4e89c2-15d7-4d50-ae54-667a85a4dcf2"],

Cell[CellGroupData[{

Cell["Function Essay", "FunctionEssaySection",
 CellID->37427227,ExpressionUUID->"f92da85e-fc7b-493b-966f-88c0baa96be0"],

Cell["XXXX", "FunctionEssay",
 CellID->356990964,ExpressionUUID->"1d72d4df-5e15-4ef7-b41c-f1b84bd2c5a0"]
}, Open  ]]
},
ScreenStyleEnvironment->"ExperimentalObject",
WindowSize->{808, 668},
WindowMargins->{{-885, Automatic}, {Automatic, -30}},
TaggingRules->{
 "DocuToolsSettingsInternal" -> {
   "$PacletVersion" -> "0.9.1871", "$MVersion" -> "11", "$FlaggedVersion" -> 
    10.4, "$ApplicationName" -> "Pubs", "$LinkBase" -> "Pubs", 
    "$ApplicationDirectory" -> "C:\\Workspace\\Pubs\\", 
    "$DocumentationDirectory" -> 
    "C:\\Workspace\\Pubs\\Documentation\\English\\", "$UseNewPageDialog" -> 
    ""}, "SecurityRisk" -> False, "SecurityExplanation" -> "", "Author" -> 
  "sebastianb", "CreationDate" -> "09-03-2017 00:52:43"},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
27, 2017)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStyles.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[77976, 1734, 155, 2, 56, "ExtendedExamplesSection",ExpressionUUID->"b2dcf50c-23c4-4dca-a033-abcd0a4e997a",
   CellTags->"ExtendedExamples",
   CellID->1854448968]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 82588, 1864}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 24, "History",ExpressionUUID->"1dc9f4a5-df10-468f-8fed-f06895d1bd42",
 CellID->870024872],
Cell[1161, 36, 142, 1, 20, "AuthorDate",ExpressionUUID->"bb7f5a0e-b909-4893-af08-b3a7556c21b7",
 CellID->929957821],
Cell[CellGroupData[{
Cell[1328, 41, 123, 1, 29, "CategorizationSection",ExpressionUUID->"8797dea1-45ab-40eb-8514-fc9d758ddf33",
 CellID->1122911449],
Cell[1454, 44, 134, 2, 30, "Categorization",ExpressionUUID->"8761114a-839f-4271-aacc-7895dd88b349",
 CellID->686433507],
Cell[1591, 48, 179, 3, 30, "Categorization",ExpressionUUID->"7364db87-4df0-4926-a49b-825b5f98762e",
 CellID->605800465],
Cell[1773, 53, 176, 3, 30, "Categorization",ExpressionUUID->"a67611bc-c111-446f-8e72-8adb73887b60",
 CellID->468444828],
Cell[1952, 58, 272, 4, 30, "Categorization",ExpressionUUID->"fbbe74f8-43a9-4d08-8f0f-70a772c61a40",
 CellID->882684644],
Cell[2227, 64, 135, 2, 30, "Categorization",ExpressionUUID->"a7b72039-89ec-4a7d-ace6-f151e5c5bba1",
 CellID->172747495]
}, Open  ]],
Cell[CellGroupData[{
Cell[2399, 71, 111, 1, 29, "SynonymsSection",ExpressionUUID->"5517580a-dd75-494b-a0c3-631c32045b64",
 CellID->1427418553],
Cell[2513, 74, 100, 1, 70, "Synonyms",ExpressionUUID->"e14387bc-101b-4662-8790-7c11f2d851a5",
 CellID->1251652828]
}, Closed]],
Cell[CellGroupData[{
Cell[2650, 80, 110, 1, 19, "KeywordsSection",ExpressionUUID->"5ae8e3e7-05f1-458b-859e-0098104face0",
 CellID->477174294],
Cell[2763, 83, 100, 1, 70, "Keywords",ExpressionUUID->"41c05580-51d3-42c6-acf5-8cf3dff0bcc5",
 CellID->1164421360]
}, Closed]],
Cell[CellGroupData[{
Cell[2900, 89, 120, 1, 19, "TemplatesSection",ExpressionUUID->"c8975ad8-7796-453f-b356-2f6ec136d095",
 CellID->1872225408],
Cell[3023, 92, 149, 2, 70, "Template",ExpressionUUID->"7a6be6cd-5ba6-4d39-8878-6f921827c733",
 CellID->1562036412],
Cell[3175, 96, 137, 2, 70, "Template",ExpressionUUID->"fa208b88-10cb-48c6-a60e-1d79650eff9d",
 CellID->158391909],
Cell[3315, 100, 136, 2, 70, "Template",ExpressionUUID->"05f1d0e1-e652-49ca-943f-c9d34c6b3d22",
 CellID->1360575930],
Cell[3454, 104, 137, 2, 70, "Template",ExpressionUUID->"4f4dc36b-fcae-4bab-92a1-15af5099b550",
 CellID->793782254]
}, Closed]],
Cell[CellGroupData[{
Cell[3628, 111, 108, 1, 19, "DetailsSection",ExpressionUUID->"8dba75e3-9387-4ca0-9523-764ab25b46f2",
 CellID->307771771],
Cell[3739, 114, 117, 2, 70, "Details",ExpressionUUID->"3939c578-57ed-403c-a6df-e01a7d47a0c6",
 CellID->49458704],
Cell[3859, 118, 124, 2, 70, "Details",ExpressionUUID->"12fdbec0-b51c-4ea2-8b1c-a0c1cf4acb3e",
 CellID->350963985],
Cell[3986, 122, 121, 2, 70, "Details",ExpressionUUID->"f2589827-63b7-40d0-9a4f-c1eae3f083ba",
 CellID->422270209],
Cell[4110, 126, 126, 2, 70, "Details",ExpressionUUID->"d365254a-0a5d-47b6-8280-70b86f7d2a50",
 CellID->545239557],
Cell[4239, 130, 116, 2, 70, "Details",ExpressionUUID->"a624cce3-bfdd-4d6f-86f7-66db0225795c",
 CellID->121292707],
Cell[4358, 134, 115, 2, 70, "Details",ExpressionUUID->"74122aa0-1825-44bb-a3d0-82e9f9ecf5f8",
 CellID->29314406],
Cell[4476, 138, 117, 2, 70, "Details",ExpressionUUID->"b757d17a-8dbf-4899-ac88-b9c9ac318c37",
 CellID->96001539],
Cell[4596, 142, 133, 2, 70, "Details",ExpressionUUID->"4a041336-b56e-4fa9-a8f5-bf682641028a",
 CellID->123278822],
Cell[4732, 146, 122, 2, 70, "Details",ExpressionUUID->"8daca241-419b-434e-9a3d-d9921111b356",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4891, 153, 117, 1, 19, "SecuritySection",ExpressionUUID->"12b2cee7-4a12-420a-9c96-0d2b80220652",
 CellID->13551076],
Cell[5011, 156, 1094, 30, 70, "SecurityDetails",ExpressionUUID->"1cd93454-3562-466f-b675-e5d9e7563a5d",
 CellID->2488900]
}, Closed]],
Cell[CellGroupData[{
Cell[6142, 191, 160, 2, 63, "ObjectName",ExpressionUUID->"067c281a-de74-4b27-84bd-366cdc067af9",
 CellID->1224892054],
Cell[6305, 195, 1141, 25, 81, "Usage",ExpressionUUID->"28b1b5e1-76bf-43e0-be3a-d4372b2eb19e",
 CellID->982511436],
Cell[7449, 222, 986, 20, 28, "Notes",ExpressionUUID->"21e16f68-38dc-4ac4-97c1-6c02144c5f12",
 CellID->1067943069],
Cell[8438, 244, 729, 19, 28, "Notes",ExpressionUUID->"abf667c6-b041-48d3-b12b-5fd5f5d0950a",
 CellID->280614056]
}, Open  ]],
Cell[CellGroupData[{
Cell[9204, 268, 112, 1, 44, "TutorialsSection",ExpressionUUID->"559b4e43-f7b8-4474-8aa1-8f1827d155a7",
 CellID->250839057],
Cell[9319, 271, 438, 10, 16, "Tutorials",ExpressionUUID->"73e3d4a5-899f-4081-a41d-d0f2fbceae1d",
 CellID->341631938]
}, Open  ]],
Cell[CellGroupData[{
Cell[9794, 286, 138, 1, 31, "RelatedDemonstrationsSection",ExpressionUUID->"8c7e753f-578f-413e-a219-191916f64b4a",
 CellID->1268215905],
Cell[9935, 289, 113, 1, 16, "RelatedDemonstrations",ExpressionUUID->"8bb68709-a6a6-4b07-a20e-b2acee07822e",
 CellID->1129518860]
}, Open  ]],
Cell[CellGroupData[{
Cell[10085, 295, 120, 1, 31, "RelatedLinksSection",ExpressionUUID->"6c01650f-465d-4a0b-ab3e-3a41ef6414d9",
 CellID->1584193535],
Cell[10208, 298, 113, 1, 16, "RelatedDemonstrations",ExpressionUUID->"e1f0ea4a-a4f7-4bbd-9ac4-127cc81fbacb",
 CellID->1253309177]
}, Open  ]],
Cell[CellGroupData[{
Cell[10358, 304, 110, 1, 31, "SeeAlsoSection",ExpressionUUID->"c8e8322b-684f-4ef6-bc5b-899254247373",
 CellID->1255426704],
Cell[10471, 307, 3127, 75, 79, "SeeAlso",ExpressionUUID->"b05cfb48-2b46-4913-a795-3d2b14ad8c39",
 CellID->1540821219]
}, Open  ]],
Cell[CellGroupData[{
Cell[13635, 387, 112, 1, 31, "MoreAboutSection",ExpressionUUID->"57af1b8f-f288-42b1-a07a-5352578cdc88",
 CellID->38303248],
Cell[13750, 390, 110, 1, 16, "MoreAbout",ExpressionUUID->"d27772fe-bef2-4463-ba2f-a749ca955fdb",
 CellID->1665078683]
}, Open  ]],
Cell[CellGroupData[{
Cell[13897, 396, 411, 11, 70, "PrimaryExamplesSection",ExpressionUUID->"738df489-4595-4044-b42d-b0ba38096787",
 CellID->880084151],
Cell[CellGroupData[{
Cell[14333, 411, 242, 5, 17, "ExampleDelimiter",ExpressionUUID->"d884027b-08a9-4663-96c9-da6ab958c99e",
 CellID->354573589],
Cell[14578, 418, 240, 4, 27, "Input",ExpressionUUID->"135f5174-447c-4206-8728-fb9b34dbd13e",
 CellID->1553863953],
Cell[14821, 424, 232, 3, 22, "ExampleText",ExpressionUUID->"d25f439c-d457-43b2-8d86-dfd7cc4cd285",
 CellID->1212887918],
Cell[CellGroupData[{
Cell[15078, 431, 584, 10, 27, "Input",ExpressionUUID->"ff097153-e9e4-4463-b3e4-83313b92eb4c",
 CellID->1092460502],
Cell[15665, 443, 2649, 56, 45, "Output",ExpressionUUID->"80ea54c3-5846-48a2-8a08-d14608246b2e",
 CellID->1469430961]
}, Open  ]],
Cell[18329, 502, 339, 6, 22, "ExampleText",ExpressionUUID->"a0c378bf-9de5-4d7a-8b49-5531429ee72c",
 CellID->1120404447],
Cell[CellGroupData[{
Cell[18693, 512, 655, 12, 27, "Input",ExpressionUUID->"6f6dfc52-6283-4013-bf5a-89415eba898e",
 CellID->1500923833],
Cell[19351, 526, 3707, 77, 71, "Output",ExpressionUUID->"5951e8ee-7735-468d-a726-57cfdae2f006",
 CellID->664221027]
}, Open  ]],
Cell[23073, 606, 272, 4, 22, "ExampleText",ExpressionUUID->"16a70b55-6e5b-4802-86e6-8761857302df",
 CellID->1716840566],
Cell[CellGroupData[{
Cell[23370, 614, 319, 6, 27, "Input",ExpressionUUID->"506df449-9401-4e10-a5b4-3fb4ce228ebe",
 CellID->1596581364],
Cell[23692, 622, 54223, 1105, 326, "Output",ExpressionUUID->"34d07cde-f321-4916-a311-65d7cee99bc4",
 CellID->942803683]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77976, 1734, 155, 2, 56, "ExtendedExamplesSection",ExpressionUUID->"b2dcf50c-23c4-4dca-a033-abcd0a4e997a",
 CellTags->"ExtendedExamples",
 CellID->1854448968],
Cell[78134, 1738, 242, 5, 33, "ExampleSection",ExpressionUUID->"7e7328ef-5126-4c4a-b67f-c3bcaee1666e",
 CellID->1293636265],
Cell[78379, 1745, 265, 5, 21, "ExampleSection",ExpressionUUID->"c31e5c51-156c-4dad-a3b5-fc67d2544c91",
 CellID->1020263627],
Cell[CellGroupData[{
Cell[78669, 1754, 244, 5, 21, "ExampleSection",ExpressionUUID->"e3ee5364-c4db-4848-9fb5-4da8dfe88071",
 CellID->2061341341],
Cell[78916, 1761, 247, 5, 70, "ExampleSubsection",ExpressionUUID->"8c99a826-b900-4868-ab08-86839b2f8da7",
 CellID->1757724783],
Cell[79166, 1768, 247, 5, 70, "ExampleSubsection",ExpressionUUID->"68a8cf43-6c4b-44c2-9538-f2cabbcb5922",
 CellID->1295379749]
}, Closed]],
Cell[79428, 1776, 248, 5, 21, "ExampleSection",ExpressionUUID->"e8dac25c-049e-4894-b0b9-5f8c9d45dc77",
 CellID->258228157],
Cell[79679, 1783, 259, 5, 21, "ExampleSection",ExpressionUUID->"9af0e973-9c43-480f-8bd5-8d68376d1385",
 CellID->2123667759],
Cell[79941, 1790, 252, 5, 21, "ExampleSection",ExpressionUUID->"8b233114-bce2-458e-b88a-2cab623952db",
 CellID->1305812373],
Cell[80196, 1797, 257, 5, 21, "ExampleSection",ExpressionUUID->"4a9d253e-b58d-4124-8301-2f39fa5c87c3",
 CellID->1653164318],
Cell[80456, 1804, 249, 5, 21, "ExampleSection",ExpressionUUID->"a7d18140-9722-43d4-9654-6399ce3ccf65",
 CellID->589267740]
}, Open  ]],
Cell[CellGroupData[{
Cell[80742, 1814, 128, 1, 79, "DesignDiscussionSection",ExpressionUUID->"10f08874-be4a-4a15-9982-a6d0a24b3ae8",
 CellID->1775809863],
Cell[80873, 1817, 107, 1, 70, "DesignDiscussion",ExpressionUUID->"e3d50c05-e502-4f7e-8f12-3687c14692fb",
 CellID->308641435]
}, Open  ]],
Cell[CellGroupData[{
Cell[81017, 1823, 128, 1, 70, "ApplicationNotesSection",ExpressionUUID->"128f3346-cccd-49f5-afdd-a6a25f0d5f05",
 CellID->1163590540],
Cell[81148, 1826, 108, 1, 70, "ApplicationNotes",ExpressionUUID->"e21795e9-285b-4d10-b006-7c4a7484043b",
 CellID->1480116198]
}, Open  ]],
Cell[81271, 1830, 113, 1, 70, "TestCasesSection",ExpressionUUID->"1d4e89c2-15d7-4d50-ae54-667a85a4dcf2",
 CellID->725748110],
Cell[CellGroupData[{
Cell[81409, 1835, 120, 1, 70, "FunctionEssaySection",ExpressionUUID->"f92da85e-fc7b-493b-966f-88c0baa96be0",
 CellID->37427227],
Cell[81532, 1838, 104, 1, 70, "FunctionEssay",ExpressionUUID->"1d72d4df-5e15-4ef7-b41c-f1b84bd2c5a0",
 CellID->356990964]
}, Open  ]]
}
]
*)

